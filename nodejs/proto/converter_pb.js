// source: khulnasoft/converter.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var proto = { khulnasoftrpc: { codegen: { }, testing: { } } }, global = proto;

var khulnasoft_codegen_hcl_pb = require('./codegen/hcl_pb.js');
goog.object.extend(proto, khulnasoft_codegen_hcl_pb);
goog.exportSymbol('proto.khulnasoftrpc.ConvertProgramRequest', null, global);
goog.exportSymbol('proto.khulnasoftrpc.ConvertProgramResponse', null, global);
goog.exportSymbol('proto.khulnasoftrpc.ConvertStateRequest', null, global);
goog.exportSymbol('proto.khulnasoftrpc.ConvertStateResponse', null, global);
goog.exportSymbol('proto.khulnasoftrpc.ResourceImport', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.khulnasoftrpc.ConvertStateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.khulnasoftrpc.ConvertStateRequest.repeatedFields_, null);
};
goog.inherits(proto.khulnasoftrpc.ConvertStateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.khulnasoftrpc.ConvertStateRequest.displayName = 'proto.khulnasoftrpc.ConvertStateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.khulnasoftrpc.ResourceImport = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.khulnasoftrpc.ResourceImport, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.khulnasoftrpc.ResourceImport.displayName = 'proto.khulnasoftrpc.ResourceImport';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.khulnasoftrpc.ConvertStateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.khulnasoftrpc.ConvertStateResponse.repeatedFields_, null);
};
goog.inherits(proto.khulnasoftrpc.ConvertStateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.khulnasoftrpc.ConvertStateResponse.displayName = 'proto.khulnasoftrpc.ConvertStateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.khulnasoftrpc.ConvertProgramRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.khulnasoftrpc.ConvertProgramRequest.repeatedFields_, null);
};
goog.inherits(proto.khulnasoftrpc.ConvertProgramRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.khulnasoftrpc.ConvertProgramRequest.displayName = 'proto.khulnasoftrpc.ConvertProgramRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.khulnasoftrpc.ConvertProgramResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.khulnasoftrpc.ConvertProgramResponse.repeatedFields_, null);
};
goog.inherits(proto.khulnasoftrpc.ConvertProgramResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.khulnasoftrpc.ConvertProgramResponse.displayName = 'proto.khulnasoftrpc.ConvertProgramResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.khulnasoftrpc.ConvertStateRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.khulnasoftrpc.ConvertStateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.khulnasoftrpc.ConvertStateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.khulnasoftrpc.ConvertStateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.khulnasoftrpc.ConvertStateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    mapperTarget: jspb.Message.getFieldWithDefault(msg, 1, ""),
    argsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.khulnasoftrpc.ConvertStateRequest}
 */
proto.khulnasoftrpc.ConvertStateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.khulnasoftrpc.ConvertStateRequest;
  return proto.khulnasoftrpc.ConvertStateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.khulnasoftrpc.ConvertStateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.khulnasoftrpc.ConvertStateRequest}
 */
proto.khulnasoftrpc.ConvertStateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMapperTarget(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.khulnasoftrpc.ConvertStateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.khulnasoftrpc.ConvertStateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.khulnasoftrpc.ConvertStateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.khulnasoftrpc.ConvertStateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMapperTarget();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getArgsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * optional string mapper_target = 1;
 * @return {string}
 */
proto.khulnasoftrpc.ConvertStateRequest.prototype.getMapperTarget = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.khulnasoftrpc.ConvertStateRequest} returns this
 */
proto.khulnasoftrpc.ConvertStateRequest.prototype.setMapperTarget = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string args = 2;
 * @return {!Array<string>}
 */
proto.khulnasoftrpc.ConvertStateRequest.prototype.getArgsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.khulnasoftrpc.ConvertStateRequest} returns this
 */
proto.khulnasoftrpc.ConvertStateRequest.prototype.setArgsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.khulnasoftrpc.ConvertStateRequest} returns this
 */
proto.khulnasoftrpc.ConvertStateRequest.prototype.addArgs = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.khulnasoftrpc.ConvertStateRequest} returns this
 */
proto.khulnasoftrpc.ConvertStateRequest.prototype.clearArgsList = function() {
  return this.setArgsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.khulnasoftrpc.ResourceImport.prototype.toObject = function(opt_includeInstance) {
  return proto.khulnasoftrpc.ResourceImport.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.khulnasoftrpc.ResourceImport} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.khulnasoftrpc.ResourceImport.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    id: jspb.Message.getFieldWithDefault(msg, 3, ""),
    version: jspb.Message.getFieldWithDefault(msg, 4, ""),
    plugindownloadurl: jspb.Message.getFieldWithDefault(msg, 5, ""),
    logicalName: jspb.Message.getFieldWithDefault(msg, 6, ""),
    isComponent: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    isRemote: jspb.Message.getBooleanFieldWithDefault(msg, 8, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.khulnasoftrpc.ResourceImport}
 */
proto.khulnasoftrpc.ResourceImport.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.khulnasoftrpc.ResourceImport;
  return proto.khulnasoftrpc.ResourceImport.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.khulnasoftrpc.ResourceImport} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.khulnasoftrpc.ResourceImport}
 */
proto.khulnasoftrpc.ResourceImport.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlugindownloadurl(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogicalName(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsComponent(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsRemote(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.khulnasoftrpc.ResourceImport.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.khulnasoftrpc.ResourceImport.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.khulnasoftrpc.ResourceImport} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.khulnasoftrpc.ResourceImport.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPlugindownloadurl();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getLogicalName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getIsComponent();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getIsRemote();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
};


/**
 * optional string type = 1;
 * @return {string}
 */
proto.khulnasoftrpc.ResourceImport.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.khulnasoftrpc.ResourceImport} returns this
 */
proto.khulnasoftrpc.ResourceImport.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.khulnasoftrpc.ResourceImport.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.khulnasoftrpc.ResourceImport} returns this
 */
proto.khulnasoftrpc.ResourceImport.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string id = 3;
 * @return {string}
 */
proto.khulnasoftrpc.ResourceImport.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.khulnasoftrpc.ResourceImport} returns this
 */
proto.khulnasoftrpc.ResourceImport.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string version = 4;
 * @return {string}
 */
proto.khulnasoftrpc.ResourceImport.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.khulnasoftrpc.ResourceImport} returns this
 */
proto.khulnasoftrpc.ResourceImport.prototype.setVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string pluginDownloadURL = 5;
 * @return {string}
 */
proto.khulnasoftrpc.ResourceImport.prototype.getPlugindownloadurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.khulnasoftrpc.ResourceImport} returns this
 */
proto.khulnasoftrpc.ResourceImport.prototype.setPlugindownloadurl = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string logical_name = 6;
 * @return {string}
 */
proto.khulnasoftrpc.ResourceImport.prototype.getLogicalName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.khulnasoftrpc.ResourceImport} returns this
 */
proto.khulnasoftrpc.ResourceImport.prototype.setLogicalName = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional bool is_component = 7;
 * @return {boolean}
 */
proto.khulnasoftrpc.ResourceImport.prototype.getIsComponent = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.khulnasoftrpc.ResourceImport} returns this
 */
proto.khulnasoftrpc.ResourceImport.prototype.setIsComponent = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional bool is_remote = 8;
 * @return {boolean}
 */
proto.khulnasoftrpc.ResourceImport.prototype.getIsRemote = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.khulnasoftrpc.ResourceImport} returns this
 */
proto.khulnasoftrpc.ResourceImport.prototype.setIsRemote = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.khulnasoftrpc.ConvertStateResponse.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.khulnasoftrpc.ConvertStateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.khulnasoftrpc.ConvertStateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.khulnasoftrpc.ConvertStateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.khulnasoftrpc.ConvertStateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    resourcesList: jspb.Message.toObjectList(msg.getResourcesList(),
    proto.khulnasoftrpc.ResourceImport.toObject, includeInstance),
    diagnosticsList: jspb.Message.toObjectList(msg.getDiagnosticsList(),
    khulnasoft_codegen_hcl_pb.Diagnostic.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.khulnasoftrpc.ConvertStateResponse}
 */
proto.khulnasoftrpc.ConvertStateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.khulnasoftrpc.ConvertStateResponse;
  return proto.khulnasoftrpc.ConvertStateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.khulnasoftrpc.ConvertStateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.khulnasoftrpc.ConvertStateResponse}
 */
proto.khulnasoftrpc.ConvertStateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.khulnasoftrpc.ResourceImport;
      reader.readMessage(value,proto.khulnasoftrpc.ResourceImport.deserializeBinaryFromReader);
      msg.addResources(value);
      break;
    case 2:
      var value = new khulnasoft_codegen_hcl_pb.Diagnostic;
      reader.readMessage(value,khulnasoft_codegen_hcl_pb.Diagnostic.deserializeBinaryFromReader);
      msg.addDiagnostics(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.khulnasoftrpc.ConvertStateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.khulnasoftrpc.ConvertStateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.khulnasoftrpc.ConvertStateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.khulnasoftrpc.ConvertStateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResourcesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.khulnasoftrpc.ResourceImport.serializeBinaryToWriter
    );
  }
  f = message.getDiagnosticsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      khulnasoft_codegen_hcl_pb.Diagnostic.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ResourceImport resources = 1;
 * @return {!Array<!proto.khulnasoftrpc.ResourceImport>}
 */
proto.khulnasoftrpc.ConvertStateResponse.prototype.getResourcesList = function() {
  return /** @type{!Array<!proto.khulnasoftrpc.ResourceImport>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.khulnasoftrpc.ResourceImport, 1));
};


/**
 * @param {!Array<!proto.khulnasoftrpc.ResourceImport>} value
 * @return {!proto.khulnasoftrpc.ConvertStateResponse} returns this
*/
proto.khulnasoftrpc.ConvertStateResponse.prototype.setResourcesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.khulnasoftrpc.ResourceImport=} opt_value
 * @param {number=} opt_index
 * @return {!proto.khulnasoftrpc.ResourceImport}
 */
proto.khulnasoftrpc.ConvertStateResponse.prototype.addResources = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.khulnasoftrpc.ResourceImport, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.khulnasoftrpc.ConvertStateResponse} returns this
 */
proto.khulnasoftrpc.ConvertStateResponse.prototype.clearResourcesList = function() {
  return this.setResourcesList([]);
};


/**
 * repeated codegen.Diagnostic diagnostics = 2;
 * @return {!Array<!proto.khulnasoftrpc.codegen.Diagnostic>}
 */
proto.khulnasoftrpc.ConvertStateResponse.prototype.getDiagnosticsList = function() {
  return /** @type{!Array<!proto.khulnasoftrpc.codegen.Diagnostic>} */ (
    jspb.Message.getRepeatedWrapperField(this, khulnasoft_codegen_hcl_pb.Diagnostic, 2));
};


/**
 * @param {!Array<!proto.khulnasoftrpc.codegen.Diagnostic>} value
 * @return {!proto.khulnasoftrpc.ConvertStateResponse} returns this
*/
proto.khulnasoftrpc.ConvertStateResponse.prototype.setDiagnosticsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.khulnasoftrpc.codegen.Diagnostic=} opt_value
 * @param {number=} opt_index
 * @return {!proto.khulnasoftrpc.codegen.Diagnostic}
 */
proto.khulnasoftrpc.ConvertStateResponse.prototype.addDiagnostics = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.khulnasoftrpc.codegen.Diagnostic, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.khulnasoftrpc.ConvertStateResponse} returns this
 */
proto.khulnasoftrpc.ConvertStateResponse.prototype.clearDiagnosticsList = function() {
  return this.setDiagnosticsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.khulnasoftrpc.ConvertProgramRequest.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.khulnasoftrpc.ConvertProgramRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.khulnasoftrpc.ConvertProgramRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.khulnasoftrpc.ConvertProgramRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.khulnasoftrpc.ConvertProgramRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sourceDirectory: jspb.Message.getFieldWithDefault(msg, 1, ""),
    targetDirectory: jspb.Message.getFieldWithDefault(msg, 2, ""),
    mapperTarget: jspb.Message.getFieldWithDefault(msg, 3, ""),
    loaderTarget: jspb.Message.getFieldWithDefault(msg, 4, ""),
    argsList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.khulnasoftrpc.ConvertProgramRequest}
 */
proto.khulnasoftrpc.ConvertProgramRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.khulnasoftrpc.ConvertProgramRequest;
  return proto.khulnasoftrpc.ConvertProgramRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.khulnasoftrpc.ConvertProgramRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.khulnasoftrpc.ConvertProgramRequest}
 */
proto.khulnasoftrpc.ConvertProgramRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSourceDirectory(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTargetDirectory(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMapperTarget(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLoaderTarget(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.khulnasoftrpc.ConvertProgramRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.khulnasoftrpc.ConvertProgramRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.khulnasoftrpc.ConvertProgramRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.khulnasoftrpc.ConvertProgramRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSourceDirectory();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTargetDirectory();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMapperTarget();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLoaderTarget();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getArgsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
};


/**
 * optional string source_directory = 1;
 * @return {string}
 */
proto.khulnasoftrpc.ConvertProgramRequest.prototype.getSourceDirectory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.khulnasoftrpc.ConvertProgramRequest} returns this
 */
proto.khulnasoftrpc.ConvertProgramRequest.prototype.setSourceDirectory = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string target_directory = 2;
 * @return {string}
 */
proto.khulnasoftrpc.ConvertProgramRequest.prototype.getTargetDirectory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.khulnasoftrpc.ConvertProgramRequest} returns this
 */
proto.khulnasoftrpc.ConvertProgramRequest.prototype.setTargetDirectory = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string mapper_target = 3;
 * @return {string}
 */
proto.khulnasoftrpc.ConvertProgramRequest.prototype.getMapperTarget = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.khulnasoftrpc.ConvertProgramRequest} returns this
 */
proto.khulnasoftrpc.ConvertProgramRequest.prototype.setMapperTarget = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string loader_target = 4;
 * @return {string}
 */
proto.khulnasoftrpc.ConvertProgramRequest.prototype.getLoaderTarget = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.khulnasoftrpc.ConvertProgramRequest} returns this
 */
proto.khulnasoftrpc.ConvertProgramRequest.prototype.setLoaderTarget = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated string args = 5;
 * @return {!Array<string>}
 */
proto.khulnasoftrpc.ConvertProgramRequest.prototype.getArgsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.khulnasoftrpc.ConvertProgramRequest} returns this
 */
proto.khulnasoftrpc.ConvertProgramRequest.prototype.setArgsList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.khulnasoftrpc.ConvertProgramRequest} returns this
 */
proto.khulnasoftrpc.ConvertProgramRequest.prototype.addArgs = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.khulnasoftrpc.ConvertProgramRequest} returns this
 */
proto.khulnasoftrpc.ConvertProgramRequest.prototype.clearArgsList = function() {
  return this.setArgsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.khulnasoftrpc.ConvertProgramResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.khulnasoftrpc.ConvertProgramResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.khulnasoftrpc.ConvertProgramResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.khulnasoftrpc.ConvertProgramResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.khulnasoftrpc.ConvertProgramResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    diagnosticsList: jspb.Message.toObjectList(msg.getDiagnosticsList(),
    khulnasoft_codegen_hcl_pb.Diagnostic.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.khulnasoftrpc.ConvertProgramResponse}
 */
proto.khulnasoftrpc.ConvertProgramResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.khulnasoftrpc.ConvertProgramResponse;
  return proto.khulnasoftrpc.ConvertProgramResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.khulnasoftrpc.ConvertProgramResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.khulnasoftrpc.ConvertProgramResponse}
 */
proto.khulnasoftrpc.ConvertProgramResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new khulnasoft_codegen_hcl_pb.Diagnostic;
      reader.readMessage(value,khulnasoft_codegen_hcl_pb.Diagnostic.deserializeBinaryFromReader);
      msg.addDiagnostics(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.khulnasoftrpc.ConvertProgramResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.khulnasoftrpc.ConvertProgramResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.khulnasoftrpc.ConvertProgramResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.khulnasoftrpc.ConvertProgramResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDiagnosticsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      khulnasoft_codegen_hcl_pb.Diagnostic.serializeBinaryToWriter
    );
  }
};


/**
 * repeated codegen.Diagnostic diagnostics = 1;
 * @return {!Array<!proto.khulnasoftrpc.codegen.Diagnostic>}
 */
proto.khulnasoftrpc.ConvertProgramResponse.prototype.getDiagnosticsList = function() {
  return /** @type{!Array<!proto.khulnasoftrpc.codegen.Diagnostic>} */ (
    jspb.Message.getRepeatedWrapperField(this, khulnasoft_codegen_hcl_pb.Diagnostic, 1));
};


/**
 * @param {!Array<!proto.khulnasoftrpc.codegen.Diagnostic>} value
 * @return {!proto.khulnasoftrpc.ConvertProgramResponse} returns this
*/
proto.khulnasoftrpc.ConvertProgramResponse.prototype.setDiagnosticsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.khulnasoftrpc.codegen.Diagnostic=} opt_value
 * @param {number=} opt_index
 * @return {!proto.khulnasoftrpc.codegen.Diagnostic}
 */
proto.khulnasoftrpc.ConvertProgramResponse.prototype.addDiagnostics = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.khulnasoftrpc.codegen.Diagnostic, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.khulnasoftrpc.ConvertProgramResponse} returns this
 */
proto.khulnasoftrpc.ConvertProgramResponse.prototype.clearDiagnosticsList = function() {
  return this.setDiagnosticsList([]);
};


goog.object.extend(exports, proto.khulnasoftrpc);
