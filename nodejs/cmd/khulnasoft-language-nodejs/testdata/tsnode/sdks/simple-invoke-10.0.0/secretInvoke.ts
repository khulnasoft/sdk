// *** WARNING: this file was generated by khulnasoft-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as khulnasoft from "@khulnasoft/khulnasoft";
import * as utilities from "./utilities";

export function secretInvoke(args: SecretInvokeArgs, opts?: khulnasoft.InvokeOptions): Promise<SecretInvokeResult> {
    opts = khulnasoft.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return khulnasoft.runtime.invoke("simple-invoke:index:secretInvoke", {
        "secretResponse": args.secretResponse,
        "value": args.value,
    }, opts);
}

export interface SecretInvokeArgs {
    secretResponse: boolean;
    value: string;
}

export interface SecretInvokeResult {
    readonly response: string;
    readonly secret: boolean;
}
export function secretInvokeOutput(args: SecretInvokeOutputArgs, opts?: khulnasoft.InvokeOutputOptions): khulnasoft.Output<SecretInvokeResult> {
    opts = khulnasoft.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return khulnasoft.runtime.invokeOutput("simple-invoke:index:secretInvoke", {
        "secretResponse": args.secretResponse,
        "value": args.value,
    }, opts);
}

export interface SecretInvokeOutputArgs {
    secretResponse: khulnasoft.Input<boolean>;
    value: khulnasoft.Input<string>;
}
