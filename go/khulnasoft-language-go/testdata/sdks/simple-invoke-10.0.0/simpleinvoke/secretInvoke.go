// Code generated by khulnasoft-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package simpleinvoke

import (
	"context"
	"reflect"

	"example.com/khulnasoft-simple-invoke/sdk/go/v10/simpleinvoke/internal"
	"github.com/khulnasoft/sdk/go/khulnasoft"
)

func SecretInvoke(ctx *khulnasoft.Context, args *SecretInvokeArgs, opts ...khulnasoft.InvokeOption) (*SecretInvokeResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv SecretInvokeResult
	err := ctx.Invoke("simple-invoke:index:secretInvoke", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type SecretInvokeArgs struct {
	SecretResponse bool   `khulnasoft:"secretResponse"`
	Value          string `khulnasoft:"value"`
}

type SecretInvokeResult struct {
	Response string `khulnasoft:"response"`
	Secret   bool   `khulnasoft:"secret"`
}

func SecretInvokeOutput(ctx *khulnasoft.Context, args SecretInvokeOutputArgs, opts ...khulnasoft.InvokeOption) SecretInvokeResultOutput {
	return khulnasoft.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (SecretInvokeResultOutput, error) {
			args := v.(SecretInvokeArgs)
			options := khulnasoft.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("simple-invoke:index:secretInvoke", args, SecretInvokeResultOutput{}, options).(SecretInvokeResultOutput), nil
		}).(SecretInvokeResultOutput)
}

type SecretInvokeOutputArgs struct {
	SecretResponse khulnasoft.BoolInput   `khulnasoft:"secretResponse"`
	Value          khulnasoft.StringInput `khulnasoft:"value"`
}

func (SecretInvokeOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretInvokeArgs)(nil)).Elem()
}

type SecretInvokeResultOutput struct{ *khulnasoft.OutputState }

func (SecretInvokeResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretInvokeResult)(nil)).Elem()
}

func (o SecretInvokeResultOutput) ToSecretInvokeResultOutput() SecretInvokeResultOutput {
	return o
}

func (o SecretInvokeResultOutput) ToSecretInvokeResultOutputWithContext(ctx context.Context) SecretInvokeResultOutput {
	return o
}

func (o SecretInvokeResultOutput) Response() khulnasoft.StringOutput {
	return o.ApplyT(func(v SecretInvokeResult) string { return v.Response }).(khulnasoft.StringOutput)
}

func (o SecretInvokeResultOutput) Secret() khulnasoft.BoolOutput {
	return o.ApplyT(func(v SecretInvokeResult) bool { return v.Secret }).(khulnasoft.BoolOutput)
}

func init() {
	khulnasoft.RegisterOutputType(SecretInvokeResultOutput{})
}
