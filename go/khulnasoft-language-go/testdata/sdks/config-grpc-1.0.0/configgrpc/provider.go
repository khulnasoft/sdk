// Code generated by khulnasoft-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package configgrpc

import (
	"context"
	"reflect"

	"example.com/khulnasoft-config-grpc/sdk/go/configgrpc/internal"
	"github.com/khulnasoft/sdk/go/khulnasoft"
)

type Provider struct {
	khulnasoft.ProviderResourceState

	SecretString1 khulnasoft.StringPtrOutput `khulnasoft:"secretString1"`
	SecretString2 khulnasoft.StringPtrOutput `khulnasoft:"secretString2"`
	SecretString3 khulnasoft.StringPtrOutput `khulnasoft:"secretString3"`
	String1       khulnasoft.StringPtrOutput `khulnasoft:"string1"`
	String2       khulnasoft.StringPtrOutput `khulnasoft:"string2"`
	String3       khulnasoft.StringPtrOutput `khulnasoft:"string3"`
}

// NewProvider registers a new resource with the given unique name, arguments, and options.
func NewProvider(ctx *khulnasoft.Context,
	name string, args *ProviderArgs, opts ...khulnasoft.ResourceOption) (*Provider, error) {
	if args == nil {
		args = &ProviderArgs{}
	}

	if args.ListSecretBool1 != nil {
		args.ListSecretBool1 = khulnasoft.ToSecret(args.ListSecretBool1).(khulnasoft.BoolArrayInput)
	}
	if args.ListSecretBool2 != nil {
		args.ListSecretBool2 = khulnasoft.ToSecret(args.ListSecretBool2).(khulnasoft.BoolArrayInput)
	}
	if args.ListSecretBool3 != nil {
		args.ListSecretBool3 = khulnasoft.ToSecret(args.ListSecretBool3).(khulnasoft.BoolArrayInput)
	}
	if args.ListSecretInt1 != nil {
		args.ListSecretInt1 = khulnasoft.ToSecret(args.ListSecretInt1).(khulnasoft.IntArrayInput)
	}
	if args.ListSecretInt2 != nil {
		args.ListSecretInt2 = khulnasoft.ToSecret(args.ListSecretInt2).(khulnasoft.IntArrayInput)
	}
	if args.ListSecretInt3 != nil {
		args.ListSecretInt3 = khulnasoft.ToSecret(args.ListSecretInt3).(khulnasoft.IntArrayInput)
	}
	if args.ListSecretNum1 != nil {
		args.ListSecretNum1 = khulnasoft.ToSecret(args.ListSecretNum1).(khulnasoft.Float64ArrayInput)
	}
	if args.ListSecretNum2 != nil {
		args.ListSecretNum2 = khulnasoft.ToSecret(args.ListSecretNum2).(khulnasoft.Float64ArrayInput)
	}
	if args.ListSecretNum3 != nil {
		args.ListSecretNum3 = khulnasoft.ToSecret(args.ListSecretNum3).(khulnasoft.Float64ArrayInput)
	}
	if args.ListSecretString1 != nil {
		args.ListSecretString1 = khulnasoft.ToSecret(args.ListSecretString1).(khulnasoft.StringArrayInput)
	}
	if args.ListSecretString2 != nil {
		args.ListSecretString2 = khulnasoft.ToSecret(args.ListSecretString2).(khulnasoft.StringArrayInput)
	}
	if args.ListSecretString3 != nil {
		args.ListSecretString3 = khulnasoft.ToSecret(args.ListSecretString3).(khulnasoft.StringArrayInput)
	}
	if args.MapSecretBool1 != nil {
		args.MapSecretBool1 = khulnasoft.ToSecret(args.MapSecretBool1).(khulnasoft.BoolMapInput)
	}
	if args.MapSecretBool2 != nil {
		args.MapSecretBool2 = khulnasoft.ToSecret(args.MapSecretBool2).(khulnasoft.BoolMapInput)
	}
	if args.MapSecretBool3 != nil {
		args.MapSecretBool3 = khulnasoft.ToSecret(args.MapSecretBool3).(khulnasoft.BoolMapInput)
	}
	if args.MapSecretInt1 != nil {
		args.MapSecretInt1 = khulnasoft.ToSecret(args.MapSecretInt1).(khulnasoft.IntMapInput)
	}
	if args.MapSecretInt2 != nil {
		args.MapSecretInt2 = khulnasoft.ToSecret(args.MapSecretInt2).(khulnasoft.IntMapInput)
	}
	if args.MapSecretInt3 != nil {
		args.MapSecretInt3 = khulnasoft.ToSecret(args.MapSecretInt3).(khulnasoft.IntMapInput)
	}
	if args.MapSecretNum1 != nil {
		args.MapSecretNum1 = khulnasoft.ToSecret(args.MapSecretNum1).(khulnasoft.Float64MapInput)
	}
	if args.MapSecretNum2 != nil {
		args.MapSecretNum2 = khulnasoft.ToSecret(args.MapSecretNum2).(khulnasoft.Float64MapInput)
	}
	if args.MapSecretNum3 != nil {
		args.MapSecretNum3 = khulnasoft.ToSecret(args.MapSecretNum3).(khulnasoft.Float64MapInput)
	}
	if args.MapSecretString1 != nil {
		args.MapSecretString1 = khulnasoft.ToSecret(args.MapSecretString1).(khulnasoft.StringMapInput)
	}
	if args.MapSecretString2 != nil {
		args.MapSecretString2 = khulnasoft.ToSecret(args.MapSecretString2).(khulnasoft.StringMapInput)
	}
	if args.MapSecretString3 != nil {
		args.MapSecretString3 = khulnasoft.ToSecret(args.MapSecretString3).(khulnasoft.StringMapInput)
	}
	if args.ObjSecretBool1 != nil {
		args.ObjSecretBool1 = khulnasoft.ToSecret(args.ObjSecretBool1).(TsecretBool1PtrInput)
	}
	if args.ObjSecretBool2 != nil {
		args.ObjSecretBool2 = khulnasoft.ToSecret(args.ObjSecretBool2).(TsecretBool2PtrInput)
	}
	if args.ObjSecretBool3 != nil {
		args.ObjSecretBool3 = khulnasoft.ToSecret(args.ObjSecretBool3).(TsecretBool3PtrInput)
	}
	if args.ObjSecretInt1 != nil {
		args.ObjSecretInt1 = khulnasoft.ToSecret(args.ObjSecretInt1).(TsecretInt1PtrInput)
	}
	if args.ObjSecretInt2 != nil {
		args.ObjSecretInt2 = khulnasoft.ToSecret(args.ObjSecretInt2).(TsecretInt2PtrInput)
	}
	if args.ObjSecretInt3 != nil {
		args.ObjSecretInt3 = khulnasoft.ToSecret(args.ObjSecretInt3).(TsecretInt3PtrInput)
	}
	if args.ObjSecretNum1 != nil {
		args.ObjSecretNum1 = khulnasoft.ToSecret(args.ObjSecretNum1).(TsecretNum1PtrInput)
	}
	if args.ObjSecretNum2 != nil {
		args.ObjSecretNum2 = khulnasoft.ToSecret(args.ObjSecretNum2).(TsecretNum2PtrInput)
	}
	if args.ObjSecretNum3 != nil {
		args.ObjSecretNum3 = khulnasoft.ToSecret(args.ObjSecretNum3).(TsecretNum3PtrInput)
	}
	if args.ObjSecretString1 != nil {
		args.ObjSecretString1 = khulnasoft.ToSecret(args.ObjSecretString1).(TsecretString1PtrInput)
	}
	if args.ObjSecretString2 != nil {
		args.ObjSecretString2 = khulnasoft.ToSecret(args.ObjSecretString2).(TsecretString2PtrInput)
	}
	if args.ObjSecretString3 != nil {
		args.ObjSecretString3 = khulnasoft.ToSecret(args.ObjSecretString3).(TsecretString3PtrInput)
	}
	if args.SecretBool1 != nil {
		args.SecretBool1 = khulnasoft.ToSecret(args.SecretBool1).(khulnasoft.BoolPtrInput)
	}
	if args.SecretBool2 != nil {
		args.SecretBool2 = khulnasoft.ToSecret(args.SecretBool2).(khulnasoft.BoolPtrInput)
	}
	if args.SecretBool3 != nil {
		args.SecretBool3 = khulnasoft.ToSecret(args.SecretBool3).(khulnasoft.BoolPtrInput)
	}
	if args.SecretInt1 != nil {
		args.SecretInt1 = khulnasoft.ToSecret(args.SecretInt1).(khulnasoft.IntPtrInput)
	}
	if args.SecretInt2 != nil {
		args.SecretInt2 = khulnasoft.ToSecret(args.SecretInt2).(khulnasoft.IntPtrInput)
	}
	if args.SecretInt3 != nil {
		args.SecretInt3 = khulnasoft.ToSecret(args.SecretInt3).(khulnasoft.IntPtrInput)
	}
	if args.SecretNum1 != nil {
		args.SecretNum1 = khulnasoft.ToSecret(args.SecretNum1).(khulnasoft.Float64PtrInput)
	}
	if args.SecretNum2 != nil {
		args.SecretNum2 = khulnasoft.ToSecret(args.SecretNum2).(khulnasoft.Float64PtrInput)
	}
	if args.SecretNum3 != nil {
		args.SecretNum3 = khulnasoft.ToSecret(args.SecretNum3).(khulnasoft.Float64PtrInput)
	}
	if args.SecretString1 != nil {
		args.SecretString1 = khulnasoft.ToSecret(args.SecretString1).(khulnasoft.StringPtrInput)
	}
	if args.SecretString2 != nil {
		args.SecretString2 = khulnasoft.ToSecret(args.SecretString2).(khulnasoft.StringPtrInput)
	}
	if args.SecretString3 != nil {
		args.SecretString3 = khulnasoft.ToSecret(args.SecretString3).(khulnasoft.StringPtrInput)
	}
	secrets := khulnasoft.AdditionalSecretOutputs([]string{
		"secretString1",
		"secretString2",
		"secretString3",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Provider
	err := ctx.RegisterResource("khulnasoft:providers:config-grpc", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

type providerArgs struct {
	Bool1             *bool              `khulnasoft:"bool1"`
	Bool2             *bool              `khulnasoft:"bool2"`
	Bool3             *bool              `khulnasoft:"bool3"`
	Int1              *int               `khulnasoft:"int1"`
	Int2              *int               `khulnasoft:"int2"`
	Int3              *int               `khulnasoft:"int3"`
	ListBool1         []bool             `khulnasoft:"listBool1"`
	ListBool2         []bool             `khulnasoft:"listBool2"`
	ListBool3         []bool             `khulnasoft:"listBool3"`
	ListInt1          []int              `khulnasoft:"listInt1"`
	ListInt2          []int              `khulnasoft:"listInt2"`
	ListInt3          []int              `khulnasoft:"listInt3"`
	ListNum1          []float64          `khulnasoft:"listNum1"`
	ListNum2          []float64          `khulnasoft:"listNum2"`
	ListNum3          []float64          `khulnasoft:"listNum3"`
	ListSecretBool1   []bool             `khulnasoft:"listSecretBool1"`
	ListSecretBool2   []bool             `khulnasoft:"listSecretBool2"`
	ListSecretBool3   []bool             `khulnasoft:"listSecretBool3"`
	ListSecretInt1    []int              `khulnasoft:"listSecretInt1"`
	ListSecretInt2    []int              `khulnasoft:"listSecretInt2"`
	ListSecretInt3    []int              `khulnasoft:"listSecretInt3"`
	ListSecretNum1    []float64          `khulnasoft:"listSecretNum1"`
	ListSecretNum2    []float64          `khulnasoft:"listSecretNum2"`
	ListSecretNum3    []float64          `khulnasoft:"listSecretNum3"`
	ListSecretString1 []string           `khulnasoft:"listSecretString1"`
	ListSecretString2 []string           `khulnasoft:"listSecretString2"`
	ListSecretString3 []string           `khulnasoft:"listSecretString3"`
	ListString1       []string           `khulnasoft:"listString1"`
	ListString2       []string           `khulnasoft:"listString2"`
	ListString3       []string           `khulnasoft:"listString3"`
	MapBool1          map[string]bool    `khulnasoft:"mapBool1"`
	MapBool2          map[string]bool    `khulnasoft:"mapBool2"`
	MapBool3          map[string]bool    `khulnasoft:"mapBool3"`
	MapInt1           map[string]int     `khulnasoft:"mapInt1"`
	MapInt2           map[string]int     `khulnasoft:"mapInt2"`
	MapInt3           map[string]int     `khulnasoft:"mapInt3"`
	MapNum1           map[string]float64 `khulnasoft:"mapNum1"`
	MapNum2           map[string]float64 `khulnasoft:"mapNum2"`
	MapNum3           map[string]float64 `khulnasoft:"mapNum3"`
	MapSecretBool1    map[string]bool    `khulnasoft:"mapSecretBool1"`
	MapSecretBool2    map[string]bool    `khulnasoft:"mapSecretBool2"`
	MapSecretBool3    map[string]bool    `khulnasoft:"mapSecretBool3"`
	MapSecretInt1     map[string]int     `khulnasoft:"mapSecretInt1"`
	MapSecretInt2     map[string]int     `khulnasoft:"mapSecretInt2"`
	MapSecretInt3     map[string]int     `khulnasoft:"mapSecretInt3"`
	MapSecretNum1     map[string]float64 `khulnasoft:"mapSecretNum1"`
	MapSecretNum2     map[string]float64 `khulnasoft:"mapSecretNum2"`
	MapSecretNum3     map[string]float64 `khulnasoft:"mapSecretNum3"`
	MapSecretString1  map[string]string  `khulnasoft:"mapSecretString1"`
	MapSecretString2  map[string]string  `khulnasoft:"mapSecretString2"`
	MapSecretString3  map[string]string  `khulnasoft:"mapSecretString3"`
	MapString1        map[string]string  `khulnasoft:"mapString1"`
	MapString2        map[string]string  `khulnasoft:"mapString2"`
	MapString3        map[string]string  `khulnasoft:"mapString3"`
	Num1              *float64           `khulnasoft:"num1"`
	Num2              *float64           `khulnasoft:"num2"`
	Num3              *float64           `khulnasoft:"num3"`
	ObjBool1          *Tbool1            `khulnasoft:"objBool1"`
	ObjBool2          *Tbool2            `khulnasoft:"objBool2"`
	ObjBool3          *Tbool3            `khulnasoft:"objBool3"`
	ObjInt1           *Tint1             `khulnasoft:"objInt1"`
	ObjInt2           *Tint2             `khulnasoft:"objInt2"`
	ObjInt3           *Tint3             `khulnasoft:"objInt3"`
	ObjNum1           *Tnum1             `khulnasoft:"objNum1"`
	ObjNum2           *Tnum2             `khulnasoft:"objNum2"`
	ObjNum3           *Tnum3             `khulnasoft:"objNum3"`
	ObjSecretBool1    *TsecretBool1      `khulnasoft:"objSecretBool1"`
	ObjSecretBool2    *TsecretBool2      `khulnasoft:"objSecretBool2"`
	ObjSecretBool3    *TsecretBool3      `khulnasoft:"objSecretBool3"`
	ObjSecretInt1     *TsecretInt1       `khulnasoft:"objSecretInt1"`
	ObjSecretInt2     *TsecretInt2       `khulnasoft:"objSecretInt2"`
	ObjSecretInt3     *TsecretInt3       `khulnasoft:"objSecretInt3"`
	ObjSecretNum1     *TsecretNum1       `khulnasoft:"objSecretNum1"`
	ObjSecretNum2     *TsecretNum2       `khulnasoft:"objSecretNum2"`
	ObjSecretNum3     *TsecretNum3       `khulnasoft:"objSecretNum3"`
	ObjSecretString1  *TsecretString1    `khulnasoft:"objSecretString1"`
	ObjSecretString2  *TsecretString2    `khulnasoft:"objSecretString2"`
	ObjSecretString3  *TsecretString3    `khulnasoft:"objSecretString3"`
	ObjString1        *Tstring1          `khulnasoft:"objString1"`
	ObjString2        *Tstring2          `khulnasoft:"objString2"`
	ObjString3        *Tstring3          `khulnasoft:"objString3"`
	SecretBool1       *bool              `khulnasoft:"secretBool1"`
	SecretBool2       *bool              `khulnasoft:"secretBool2"`
	SecretBool3       *bool              `khulnasoft:"secretBool3"`
	SecretInt1        *int               `khulnasoft:"secretInt1"`
	SecretInt2        *int               `khulnasoft:"secretInt2"`
	SecretInt3        *int               `khulnasoft:"secretInt3"`
	SecretNum1        *float64           `khulnasoft:"secretNum1"`
	SecretNum2        *float64           `khulnasoft:"secretNum2"`
	SecretNum3        *float64           `khulnasoft:"secretNum3"`
	SecretString1     *string            `khulnasoft:"secretString1"`
	SecretString2     *string            `khulnasoft:"secretString2"`
	SecretString3     *string            `khulnasoft:"secretString3"`
	String1           *string            `khulnasoft:"string1"`
	String2           *string            `khulnasoft:"string2"`
	String3           *string            `khulnasoft:"string3"`
}

// The set of arguments for constructing a Provider resource.
type ProviderArgs struct {
	Bool1             khulnasoft.BoolPtrInput
	Bool2             khulnasoft.BoolPtrInput
	Bool3             khulnasoft.BoolPtrInput
	Int1              khulnasoft.IntPtrInput
	Int2              khulnasoft.IntPtrInput
	Int3              khulnasoft.IntPtrInput
	ListBool1         khulnasoft.BoolArrayInput
	ListBool2         khulnasoft.BoolArrayInput
	ListBool3         khulnasoft.BoolArrayInput
	ListInt1          khulnasoft.IntArrayInput
	ListInt2          khulnasoft.IntArrayInput
	ListInt3          khulnasoft.IntArrayInput
	ListNum1          khulnasoft.Float64ArrayInput
	ListNum2          khulnasoft.Float64ArrayInput
	ListNum3          khulnasoft.Float64ArrayInput
	ListSecretBool1   khulnasoft.BoolArrayInput
	ListSecretBool2   khulnasoft.BoolArrayInput
	ListSecretBool3   khulnasoft.BoolArrayInput
	ListSecretInt1    khulnasoft.IntArrayInput
	ListSecretInt2    khulnasoft.IntArrayInput
	ListSecretInt3    khulnasoft.IntArrayInput
	ListSecretNum1    khulnasoft.Float64ArrayInput
	ListSecretNum2    khulnasoft.Float64ArrayInput
	ListSecretNum3    khulnasoft.Float64ArrayInput
	ListSecretString1 khulnasoft.StringArrayInput
	ListSecretString2 khulnasoft.StringArrayInput
	ListSecretString3 khulnasoft.StringArrayInput
	ListString1       khulnasoft.StringArrayInput
	ListString2       khulnasoft.StringArrayInput
	ListString3       khulnasoft.StringArrayInput
	MapBool1          khulnasoft.BoolMapInput
	MapBool2          khulnasoft.BoolMapInput
	MapBool3          khulnasoft.BoolMapInput
	MapInt1           khulnasoft.IntMapInput
	MapInt2           khulnasoft.IntMapInput
	MapInt3           khulnasoft.IntMapInput
	MapNum1           khulnasoft.Float64MapInput
	MapNum2           khulnasoft.Float64MapInput
	MapNum3           khulnasoft.Float64MapInput
	MapSecretBool1    khulnasoft.BoolMapInput
	MapSecretBool2    khulnasoft.BoolMapInput
	MapSecretBool3    khulnasoft.BoolMapInput
	MapSecretInt1     khulnasoft.IntMapInput
	MapSecretInt2     khulnasoft.IntMapInput
	MapSecretInt3     khulnasoft.IntMapInput
	MapSecretNum1     khulnasoft.Float64MapInput
	MapSecretNum2     khulnasoft.Float64MapInput
	MapSecretNum3     khulnasoft.Float64MapInput
	MapSecretString1  khulnasoft.StringMapInput
	MapSecretString2  khulnasoft.StringMapInput
	MapSecretString3  khulnasoft.StringMapInput
	MapString1        khulnasoft.StringMapInput
	MapString2        khulnasoft.StringMapInput
	MapString3        khulnasoft.StringMapInput
	Num1              khulnasoft.Float64PtrInput
	Num2              khulnasoft.Float64PtrInput
	Num3              khulnasoft.Float64PtrInput
	ObjBool1          Tbool1PtrInput
	ObjBool2          Tbool2PtrInput
	ObjBool3          Tbool3PtrInput
	ObjInt1           Tint1PtrInput
	ObjInt2           Tint2PtrInput
	ObjInt3           Tint3PtrInput
	ObjNum1           Tnum1PtrInput
	ObjNum2           Tnum2PtrInput
	ObjNum3           Tnum3PtrInput
	ObjSecretBool1    TsecretBool1PtrInput
	ObjSecretBool2    TsecretBool2PtrInput
	ObjSecretBool3    TsecretBool3PtrInput
	ObjSecretInt1     TsecretInt1PtrInput
	ObjSecretInt2     TsecretInt2PtrInput
	ObjSecretInt3     TsecretInt3PtrInput
	ObjSecretNum1     TsecretNum1PtrInput
	ObjSecretNum2     TsecretNum2PtrInput
	ObjSecretNum3     TsecretNum3PtrInput
	ObjSecretString1  TsecretString1PtrInput
	ObjSecretString2  TsecretString2PtrInput
	ObjSecretString3  TsecretString3PtrInput
	ObjString1        Tstring1PtrInput
	ObjString2        Tstring2PtrInput
	ObjString3        Tstring3PtrInput
	SecretBool1       khulnasoft.BoolPtrInput
	SecretBool2       khulnasoft.BoolPtrInput
	SecretBool3       khulnasoft.BoolPtrInput
	SecretInt1        khulnasoft.IntPtrInput
	SecretInt2        khulnasoft.IntPtrInput
	SecretInt3        khulnasoft.IntPtrInput
	SecretNum1        khulnasoft.Float64PtrInput
	SecretNum2        khulnasoft.Float64PtrInput
	SecretNum3        khulnasoft.Float64PtrInput
	SecretString1     khulnasoft.StringPtrInput
	SecretString2     khulnasoft.StringPtrInput
	SecretString3     khulnasoft.StringPtrInput
	String1           khulnasoft.StringPtrInput
	String2           khulnasoft.StringPtrInput
	String3           khulnasoft.StringPtrInput
}

func (ProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*providerArgs)(nil)).Elem()
}

type ProviderInput interface {
	khulnasoft.Input

	ToProviderOutput() ProviderOutput
	ToProviderOutputWithContext(ctx context.Context) ProviderOutput
}

func (*Provider) ElementType() reflect.Type {
	return reflect.TypeOf((**Provider)(nil)).Elem()
}

func (i *Provider) ToProviderOutput() ProviderOutput {
	return i.ToProviderOutputWithContext(context.Background())
}

func (i *Provider) ToProviderOutputWithContext(ctx context.Context) ProviderOutput {
	return khulnasoft.ToOutputWithContext(ctx, i).(ProviderOutput)
}

type ProviderOutput struct{ *khulnasoft.OutputState }

func (ProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Provider)(nil)).Elem()
}

func (o ProviderOutput) ToProviderOutput() ProviderOutput {
	return o
}

func (o ProviderOutput) ToProviderOutputWithContext(ctx context.Context) ProviderOutput {
	return o
}

func (o ProviderOutput) SecretString1() khulnasoft.StringPtrOutput {
	return o.ApplyT(func(v *Provider) khulnasoft.StringPtrOutput { return v.SecretString1 }).(khulnasoft.StringPtrOutput)
}

func (o ProviderOutput) SecretString2() khulnasoft.StringPtrOutput {
	return o.ApplyT(func(v *Provider) khulnasoft.StringPtrOutput { return v.SecretString2 }).(khulnasoft.StringPtrOutput)
}

func (o ProviderOutput) SecretString3() khulnasoft.StringPtrOutput {
	return o.ApplyT(func(v *Provider) khulnasoft.StringPtrOutput { return v.SecretString3 }).(khulnasoft.StringPtrOutput)
}

func (o ProviderOutput) String1() khulnasoft.StringPtrOutput {
	return o.ApplyT(func(v *Provider) khulnasoft.StringPtrOutput { return v.String1 }).(khulnasoft.StringPtrOutput)
}

func (o ProviderOutput) String2() khulnasoft.StringPtrOutput {
	return o.ApplyT(func(v *Provider) khulnasoft.StringPtrOutput { return v.String2 }).(khulnasoft.StringPtrOutput)
}

func (o ProviderOutput) String3() khulnasoft.StringPtrOutput {
	return o.ApplyT(func(v *Provider) khulnasoft.StringPtrOutput { return v.String3 }).(khulnasoft.StringPtrOutput)
}

func init() {
	khulnasoft.RegisterInputType(reflect.TypeOf((*ProviderInput)(nil)).Elem(), &Provider{})
	khulnasoft.RegisterOutputType(ProviderOutput{})
}
