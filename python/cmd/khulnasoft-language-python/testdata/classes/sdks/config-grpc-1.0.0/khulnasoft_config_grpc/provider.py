# coding=utf-8
# *** WARNING: this file was generated by khulnasoft-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import khulnasoft
import khulnasoft.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from ._inputs import *

__all__ = ['ProviderArgs', 'Provider']

@khulnasoft.input_type
class ProviderArgs:
    def __init__(__self__, *,
                 bool1: Optional[khulnasoft.Input[bool]] = None,
                 bool2: Optional[khulnasoft.Input[bool]] = None,
                 bool3: Optional[khulnasoft.Input[bool]] = None,
                 int1: Optional[khulnasoft.Input[int]] = None,
                 int2: Optional[khulnasoft.Input[int]] = None,
                 int3: Optional[khulnasoft.Input[int]] = None,
                 list_bool1: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[bool]]]] = None,
                 list_bool2: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[bool]]]] = None,
                 list_bool3: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[bool]]]] = None,
                 list_int1: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[int]]]] = None,
                 list_int2: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[int]]]] = None,
                 list_int3: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[int]]]] = None,
                 list_num1: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[float]]]] = None,
                 list_num2: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[float]]]] = None,
                 list_num3: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[float]]]] = None,
                 list_secret_bool1: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[bool]]]] = None,
                 list_secret_bool2: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[bool]]]] = None,
                 list_secret_bool3: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[bool]]]] = None,
                 list_secret_int1: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[int]]]] = None,
                 list_secret_int2: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[int]]]] = None,
                 list_secret_int3: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[int]]]] = None,
                 list_secret_num1: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[float]]]] = None,
                 list_secret_num2: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[float]]]] = None,
                 list_secret_num3: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[float]]]] = None,
                 list_secret_string1: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[str]]]] = None,
                 list_secret_string2: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[str]]]] = None,
                 list_secret_string3: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[str]]]] = None,
                 list_string1: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[str]]]] = None,
                 list_string2: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[str]]]] = None,
                 list_string3: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[str]]]] = None,
                 map_bool1: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[bool]]]] = None,
                 map_bool2: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[bool]]]] = None,
                 map_bool3: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[bool]]]] = None,
                 map_int1: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[int]]]] = None,
                 map_int2: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[int]]]] = None,
                 map_int3: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[int]]]] = None,
                 map_num1: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[float]]]] = None,
                 map_num2: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[float]]]] = None,
                 map_num3: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[float]]]] = None,
                 map_secret_bool1: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[bool]]]] = None,
                 map_secret_bool2: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[bool]]]] = None,
                 map_secret_bool3: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[bool]]]] = None,
                 map_secret_int1: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[int]]]] = None,
                 map_secret_int2: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[int]]]] = None,
                 map_secret_int3: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[int]]]] = None,
                 map_secret_num1: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[float]]]] = None,
                 map_secret_num2: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[float]]]] = None,
                 map_secret_num3: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[float]]]] = None,
                 map_secret_string1: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[str]]]] = None,
                 map_secret_string2: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[str]]]] = None,
                 map_secret_string3: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[str]]]] = None,
                 map_string1: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[str]]]] = None,
                 map_string2: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[str]]]] = None,
                 map_string3: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[str]]]] = None,
                 num1: Optional[khulnasoft.Input[float]] = None,
                 num2: Optional[khulnasoft.Input[float]] = None,
                 num3: Optional[khulnasoft.Input[float]] = None,
                 obj_bool1: Optional[khulnasoft.Input['Tbool1Args']] = None,
                 obj_bool2: Optional[khulnasoft.Input['Tbool2Args']] = None,
                 obj_bool3: Optional[khulnasoft.Input['Tbool3Args']] = None,
                 obj_int1: Optional[khulnasoft.Input['Tint1Args']] = None,
                 obj_int2: Optional[khulnasoft.Input['Tint2Args']] = None,
                 obj_int3: Optional[khulnasoft.Input['Tint3Args']] = None,
                 obj_num1: Optional[khulnasoft.Input['Tnum1Args']] = None,
                 obj_num2: Optional[khulnasoft.Input['Tnum2Args']] = None,
                 obj_num3: Optional[khulnasoft.Input['Tnum3Args']] = None,
                 obj_secret_bool1: Optional[khulnasoft.Input['TsecretBool1Args']] = None,
                 obj_secret_bool2: Optional[khulnasoft.Input['TsecretBool2Args']] = None,
                 obj_secret_bool3: Optional[khulnasoft.Input['TsecretBool3Args']] = None,
                 obj_secret_int1: Optional[khulnasoft.Input['TsecretInt1Args']] = None,
                 obj_secret_int2: Optional[khulnasoft.Input['TsecretInt2Args']] = None,
                 obj_secret_int3: Optional[khulnasoft.Input['TsecretInt3Args']] = None,
                 obj_secret_num1: Optional[khulnasoft.Input['TsecretNum1Args']] = None,
                 obj_secret_num2: Optional[khulnasoft.Input['TsecretNum2Args']] = None,
                 obj_secret_num3: Optional[khulnasoft.Input['TsecretNum3Args']] = None,
                 obj_secret_string1: Optional[khulnasoft.Input['TsecretString1Args']] = None,
                 obj_secret_string2: Optional[khulnasoft.Input['TsecretString2Args']] = None,
                 obj_secret_string3: Optional[khulnasoft.Input['TsecretString3Args']] = None,
                 obj_string1: Optional[khulnasoft.Input['Tstring1Args']] = None,
                 obj_string2: Optional[khulnasoft.Input['Tstring2Args']] = None,
                 obj_string3: Optional[khulnasoft.Input['Tstring3Args']] = None,
                 secret_bool1: Optional[khulnasoft.Input[bool]] = None,
                 secret_bool2: Optional[khulnasoft.Input[bool]] = None,
                 secret_bool3: Optional[khulnasoft.Input[bool]] = None,
                 secret_int1: Optional[khulnasoft.Input[int]] = None,
                 secret_int2: Optional[khulnasoft.Input[int]] = None,
                 secret_int3: Optional[khulnasoft.Input[int]] = None,
                 secret_num1: Optional[khulnasoft.Input[float]] = None,
                 secret_num2: Optional[khulnasoft.Input[float]] = None,
                 secret_num3: Optional[khulnasoft.Input[float]] = None,
                 secret_string1: Optional[khulnasoft.Input[str]] = None,
                 secret_string2: Optional[khulnasoft.Input[str]] = None,
                 secret_string3: Optional[khulnasoft.Input[str]] = None,
                 string1: Optional[khulnasoft.Input[str]] = None,
                 string2: Optional[khulnasoft.Input[str]] = None,
                 string3: Optional[khulnasoft.Input[str]] = None):
        """
        The set of arguments for constructing a Provider resource.
        """
        if bool1 is not None:
            khulnasoft.set(__self__, "bool1", bool1)
        if bool2 is not None:
            khulnasoft.set(__self__, "bool2", bool2)
        if bool3 is not None:
            khulnasoft.set(__self__, "bool3", bool3)
        if int1 is not None:
            khulnasoft.set(__self__, "int1", int1)
        if int2 is not None:
            khulnasoft.set(__self__, "int2", int2)
        if int3 is not None:
            khulnasoft.set(__self__, "int3", int3)
        if list_bool1 is not None:
            khulnasoft.set(__self__, "list_bool1", list_bool1)
        if list_bool2 is not None:
            khulnasoft.set(__self__, "list_bool2", list_bool2)
        if list_bool3 is not None:
            khulnasoft.set(__self__, "list_bool3", list_bool3)
        if list_int1 is not None:
            khulnasoft.set(__self__, "list_int1", list_int1)
        if list_int2 is not None:
            khulnasoft.set(__self__, "list_int2", list_int2)
        if list_int3 is not None:
            khulnasoft.set(__self__, "list_int3", list_int3)
        if list_num1 is not None:
            khulnasoft.set(__self__, "list_num1", list_num1)
        if list_num2 is not None:
            khulnasoft.set(__self__, "list_num2", list_num2)
        if list_num3 is not None:
            khulnasoft.set(__self__, "list_num3", list_num3)
        if list_secret_bool1 is not None:
            khulnasoft.set(__self__, "list_secret_bool1", list_secret_bool1)
        if list_secret_bool2 is not None:
            khulnasoft.set(__self__, "list_secret_bool2", list_secret_bool2)
        if list_secret_bool3 is not None:
            khulnasoft.set(__self__, "list_secret_bool3", list_secret_bool3)
        if list_secret_int1 is not None:
            khulnasoft.set(__self__, "list_secret_int1", list_secret_int1)
        if list_secret_int2 is not None:
            khulnasoft.set(__self__, "list_secret_int2", list_secret_int2)
        if list_secret_int3 is not None:
            khulnasoft.set(__self__, "list_secret_int3", list_secret_int3)
        if list_secret_num1 is not None:
            khulnasoft.set(__self__, "list_secret_num1", list_secret_num1)
        if list_secret_num2 is not None:
            khulnasoft.set(__self__, "list_secret_num2", list_secret_num2)
        if list_secret_num3 is not None:
            khulnasoft.set(__self__, "list_secret_num3", list_secret_num3)
        if list_secret_string1 is not None:
            khulnasoft.set(__self__, "list_secret_string1", list_secret_string1)
        if list_secret_string2 is not None:
            khulnasoft.set(__self__, "list_secret_string2", list_secret_string2)
        if list_secret_string3 is not None:
            khulnasoft.set(__self__, "list_secret_string3", list_secret_string3)
        if list_string1 is not None:
            khulnasoft.set(__self__, "list_string1", list_string1)
        if list_string2 is not None:
            khulnasoft.set(__self__, "list_string2", list_string2)
        if list_string3 is not None:
            khulnasoft.set(__self__, "list_string3", list_string3)
        if map_bool1 is not None:
            khulnasoft.set(__self__, "map_bool1", map_bool1)
        if map_bool2 is not None:
            khulnasoft.set(__self__, "map_bool2", map_bool2)
        if map_bool3 is not None:
            khulnasoft.set(__self__, "map_bool3", map_bool3)
        if map_int1 is not None:
            khulnasoft.set(__self__, "map_int1", map_int1)
        if map_int2 is not None:
            khulnasoft.set(__self__, "map_int2", map_int2)
        if map_int3 is not None:
            khulnasoft.set(__self__, "map_int3", map_int3)
        if map_num1 is not None:
            khulnasoft.set(__self__, "map_num1", map_num1)
        if map_num2 is not None:
            khulnasoft.set(__self__, "map_num2", map_num2)
        if map_num3 is not None:
            khulnasoft.set(__self__, "map_num3", map_num3)
        if map_secret_bool1 is not None:
            khulnasoft.set(__self__, "map_secret_bool1", map_secret_bool1)
        if map_secret_bool2 is not None:
            khulnasoft.set(__self__, "map_secret_bool2", map_secret_bool2)
        if map_secret_bool3 is not None:
            khulnasoft.set(__self__, "map_secret_bool3", map_secret_bool3)
        if map_secret_int1 is not None:
            khulnasoft.set(__self__, "map_secret_int1", map_secret_int1)
        if map_secret_int2 is not None:
            khulnasoft.set(__self__, "map_secret_int2", map_secret_int2)
        if map_secret_int3 is not None:
            khulnasoft.set(__self__, "map_secret_int3", map_secret_int3)
        if map_secret_num1 is not None:
            khulnasoft.set(__self__, "map_secret_num1", map_secret_num1)
        if map_secret_num2 is not None:
            khulnasoft.set(__self__, "map_secret_num2", map_secret_num2)
        if map_secret_num3 is not None:
            khulnasoft.set(__self__, "map_secret_num3", map_secret_num3)
        if map_secret_string1 is not None:
            khulnasoft.set(__self__, "map_secret_string1", map_secret_string1)
        if map_secret_string2 is not None:
            khulnasoft.set(__self__, "map_secret_string2", map_secret_string2)
        if map_secret_string3 is not None:
            khulnasoft.set(__self__, "map_secret_string3", map_secret_string3)
        if map_string1 is not None:
            khulnasoft.set(__self__, "map_string1", map_string1)
        if map_string2 is not None:
            khulnasoft.set(__self__, "map_string2", map_string2)
        if map_string3 is not None:
            khulnasoft.set(__self__, "map_string3", map_string3)
        if num1 is not None:
            khulnasoft.set(__self__, "num1", num1)
        if num2 is not None:
            khulnasoft.set(__self__, "num2", num2)
        if num3 is not None:
            khulnasoft.set(__self__, "num3", num3)
        if obj_bool1 is not None:
            khulnasoft.set(__self__, "obj_bool1", obj_bool1)
        if obj_bool2 is not None:
            khulnasoft.set(__self__, "obj_bool2", obj_bool2)
        if obj_bool3 is not None:
            khulnasoft.set(__self__, "obj_bool3", obj_bool3)
        if obj_int1 is not None:
            khulnasoft.set(__self__, "obj_int1", obj_int1)
        if obj_int2 is not None:
            khulnasoft.set(__self__, "obj_int2", obj_int2)
        if obj_int3 is not None:
            khulnasoft.set(__self__, "obj_int3", obj_int3)
        if obj_num1 is not None:
            khulnasoft.set(__self__, "obj_num1", obj_num1)
        if obj_num2 is not None:
            khulnasoft.set(__self__, "obj_num2", obj_num2)
        if obj_num3 is not None:
            khulnasoft.set(__self__, "obj_num3", obj_num3)
        if obj_secret_bool1 is not None:
            khulnasoft.set(__self__, "obj_secret_bool1", obj_secret_bool1)
        if obj_secret_bool2 is not None:
            khulnasoft.set(__self__, "obj_secret_bool2", obj_secret_bool2)
        if obj_secret_bool3 is not None:
            khulnasoft.set(__self__, "obj_secret_bool3", obj_secret_bool3)
        if obj_secret_int1 is not None:
            khulnasoft.set(__self__, "obj_secret_int1", obj_secret_int1)
        if obj_secret_int2 is not None:
            khulnasoft.set(__self__, "obj_secret_int2", obj_secret_int2)
        if obj_secret_int3 is not None:
            khulnasoft.set(__self__, "obj_secret_int3", obj_secret_int3)
        if obj_secret_num1 is not None:
            khulnasoft.set(__self__, "obj_secret_num1", obj_secret_num1)
        if obj_secret_num2 is not None:
            khulnasoft.set(__self__, "obj_secret_num2", obj_secret_num2)
        if obj_secret_num3 is not None:
            khulnasoft.set(__self__, "obj_secret_num3", obj_secret_num3)
        if obj_secret_string1 is not None:
            khulnasoft.set(__self__, "obj_secret_string1", obj_secret_string1)
        if obj_secret_string2 is not None:
            khulnasoft.set(__self__, "obj_secret_string2", obj_secret_string2)
        if obj_secret_string3 is not None:
            khulnasoft.set(__self__, "obj_secret_string3", obj_secret_string3)
        if obj_string1 is not None:
            khulnasoft.set(__self__, "obj_string1", obj_string1)
        if obj_string2 is not None:
            khulnasoft.set(__self__, "obj_string2", obj_string2)
        if obj_string3 is not None:
            khulnasoft.set(__self__, "obj_string3", obj_string3)
        if secret_bool1 is not None:
            khulnasoft.set(__self__, "secret_bool1", secret_bool1)
        if secret_bool2 is not None:
            khulnasoft.set(__self__, "secret_bool2", secret_bool2)
        if secret_bool3 is not None:
            khulnasoft.set(__self__, "secret_bool3", secret_bool3)
        if secret_int1 is not None:
            khulnasoft.set(__self__, "secret_int1", secret_int1)
        if secret_int2 is not None:
            khulnasoft.set(__self__, "secret_int2", secret_int2)
        if secret_int3 is not None:
            khulnasoft.set(__self__, "secret_int3", secret_int3)
        if secret_num1 is not None:
            khulnasoft.set(__self__, "secret_num1", secret_num1)
        if secret_num2 is not None:
            khulnasoft.set(__self__, "secret_num2", secret_num2)
        if secret_num3 is not None:
            khulnasoft.set(__self__, "secret_num3", secret_num3)
        if secret_string1 is not None:
            khulnasoft.set(__self__, "secret_string1", secret_string1)
        if secret_string2 is not None:
            khulnasoft.set(__self__, "secret_string2", secret_string2)
        if secret_string3 is not None:
            khulnasoft.set(__self__, "secret_string3", secret_string3)
        if string1 is not None:
            khulnasoft.set(__self__, "string1", string1)
        if string2 is not None:
            khulnasoft.set(__self__, "string2", string2)
        if string3 is not None:
            khulnasoft.set(__self__, "string3", string3)

    @property
    @khulnasoft.getter
    def bool1(self) -> Optional[khulnasoft.Input[bool]]:
        return khulnasoft.get(self, "bool1")

    @bool1.setter
    def bool1(self, value: Optional[khulnasoft.Input[bool]]):
        khulnasoft.set(self, "bool1", value)

    @property
    @khulnasoft.getter
    def bool2(self) -> Optional[khulnasoft.Input[bool]]:
        return khulnasoft.get(self, "bool2")

    @bool2.setter
    def bool2(self, value: Optional[khulnasoft.Input[bool]]):
        khulnasoft.set(self, "bool2", value)

    @property
    @khulnasoft.getter
    def bool3(self) -> Optional[khulnasoft.Input[bool]]:
        return khulnasoft.get(self, "bool3")

    @bool3.setter
    def bool3(self, value: Optional[khulnasoft.Input[bool]]):
        khulnasoft.set(self, "bool3", value)

    @property
    @khulnasoft.getter
    def int1(self) -> Optional[khulnasoft.Input[int]]:
        return khulnasoft.get(self, "int1")

    @int1.setter
    def int1(self, value: Optional[khulnasoft.Input[int]]):
        khulnasoft.set(self, "int1", value)

    @property
    @khulnasoft.getter
    def int2(self) -> Optional[khulnasoft.Input[int]]:
        return khulnasoft.get(self, "int2")

    @int2.setter
    def int2(self, value: Optional[khulnasoft.Input[int]]):
        khulnasoft.set(self, "int2", value)

    @property
    @khulnasoft.getter
    def int3(self) -> Optional[khulnasoft.Input[int]]:
        return khulnasoft.get(self, "int3")

    @int3.setter
    def int3(self, value: Optional[khulnasoft.Input[int]]):
        khulnasoft.set(self, "int3", value)

    @property
    @khulnasoft.getter(name="listBool1")
    def list_bool1(self) -> Optional[khulnasoft.Input[Sequence[khulnasoft.Input[bool]]]]:
        return khulnasoft.get(self, "list_bool1")

    @list_bool1.setter
    def list_bool1(self, value: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[bool]]]]):
        khulnasoft.set(self, "list_bool1", value)

    @property
    @khulnasoft.getter(name="listBool2")
    def list_bool2(self) -> Optional[khulnasoft.Input[Sequence[khulnasoft.Input[bool]]]]:
        return khulnasoft.get(self, "list_bool2")

    @list_bool2.setter
    def list_bool2(self, value: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[bool]]]]):
        khulnasoft.set(self, "list_bool2", value)

    @property
    @khulnasoft.getter(name="listBool3")
    def list_bool3(self) -> Optional[khulnasoft.Input[Sequence[khulnasoft.Input[bool]]]]:
        return khulnasoft.get(self, "list_bool3")

    @list_bool3.setter
    def list_bool3(self, value: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[bool]]]]):
        khulnasoft.set(self, "list_bool3", value)

    @property
    @khulnasoft.getter(name="listInt1")
    def list_int1(self) -> Optional[khulnasoft.Input[Sequence[khulnasoft.Input[int]]]]:
        return khulnasoft.get(self, "list_int1")

    @list_int1.setter
    def list_int1(self, value: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[int]]]]):
        khulnasoft.set(self, "list_int1", value)

    @property
    @khulnasoft.getter(name="listInt2")
    def list_int2(self) -> Optional[khulnasoft.Input[Sequence[khulnasoft.Input[int]]]]:
        return khulnasoft.get(self, "list_int2")

    @list_int2.setter
    def list_int2(self, value: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[int]]]]):
        khulnasoft.set(self, "list_int2", value)

    @property
    @khulnasoft.getter(name="listInt3")
    def list_int3(self) -> Optional[khulnasoft.Input[Sequence[khulnasoft.Input[int]]]]:
        return khulnasoft.get(self, "list_int3")

    @list_int3.setter
    def list_int3(self, value: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[int]]]]):
        khulnasoft.set(self, "list_int3", value)

    @property
    @khulnasoft.getter(name="listNum1")
    def list_num1(self) -> Optional[khulnasoft.Input[Sequence[khulnasoft.Input[float]]]]:
        return khulnasoft.get(self, "list_num1")

    @list_num1.setter
    def list_num1(self, value: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[float]]]]):
        khulnasoft.set(self, "list_num1", value)

    @property
    @khulnasoft.getter(name="listNum2")
    def list_num2(self) -> Optional[khulnasoft.Input[Sequence[khulnasoft.Input[float]]]]:
        return khulnasoft.get(self, "list_num2")

    @list_num2.setter
    def list_num2(self, value: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[float]]]]):
        khulnasoft.set(self, "list_num2", value)

    @property
    @khulnasoft.getter(name="listNum3")
    def list_num3(self) -> Optional[khulnasoft.Input[Sequence[khulnasoft.Input[float]]]]:
        return khulnasoft.get(self, "list_num3")

    @list_num3.setter
    def list_num3(self, value: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[float]]]]):
        khulnasoft.set(self, "list_num3", value)

    @property
    @khulnasoft.getter(name="listSecretBool1")
    def list_secret_bool1(self) -> Optional[khulnasoft.Input[Sequence[khulnasoft.Input[bool]]]]:
        return khulnasoft.get(self, "list_secret_bool1")

    @list_secret_bool1.setter
    def list_secret_bool1(self, value: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[bool]]]]):
        khulnasoft.set(self, "list_secret_bool1", value)

    @property
    @khulnasoft.getter(name="listSecretBool2")
    def list_secret_bool2(self) -> Optional[khulnasoft.Input[Sequence[khulnasoft.Input[bool]]]]:
        return khulnasoft.get(self, "list_secret_bool2")

    @list_secret_bool2.setter
    def list_secret_bool2(self, value: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[bool]]]]):
        khulnasoft.set(self, "list_secret_bool2", value)

    @property
    @khulnasoft.getter(name="listSecretBool3")
    def list_secret_bool3(self) -> Optional[khulnasoft.Input[Sequence[khulnasoft.Input[bool]]]]:
        return khulnasoft.get(self, "list_secret_bool3")

    @list_secret_bool3.setter
    def list_secret_bool3(self, value: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[bool]]]]):
        khulnasoft.set(self, "list_secret_bool3", value)

    @property
    @khulnasoft.getter(name="listSecretInt1")
    def list_secret_int1(self) -> Optional[khulnasoft.Input[Sequence[khulnasoft.Input[int]]]]:
        return khulnasoft.get(self, "list_secret_int1")

    @list_secret_int1.setter
    def list_secret_int1(self, value: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[int]]]]):
        khulnasoft.set(self, "list_secret_int1", value)

    @property
    @khulnasoft.getter(name="listSecretInt2")
    def list_secret_int2(self) -> Optional[khulnasoft.Input[Sequence[khulnasoft.Input[int]]]]:
        return khulnasoft.get(self, "list_secret_int2")

    @list_secret_int2.setter
    def list_secret_int2(self, value: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[int]]]]):
        khulnasoft.set(self, "list_secret_int2", value)

    @property
    @khulnasoft.getter(name="listSecretInt3")
    def list_secret_int3(self) -> Optional[khulnasoft.Input[Sequence[khulnasoft.Input[int]]]]:
        return khulnasoft.get(self, "list_secret_int3")

    @list_secret_int3.setter
    def list_secret_int3(self, value: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[int]]]]):
        khulnasoft.set(self, "list_secret_int3", value)

    @property
    @khulnasoft.getter(name="listSecretNum1")
    def list_secret_num1(self) -> Optional[khulnasoft.Input[Sequence[khulnasoft.Input[float]]]]:
        return khulnasoft.get(self, "list_secret_num1")

    @list_secret_num1.setter
    def list_secret_num1(self, value: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[float]]]]):
        khulnasoft.set(self, "list_secret_num1", value)

    @property
    @khulnasoft.getter(name="listSecretNum2")
    def list_secret_num2(self) -> Optional[khulnasoft.Input[Sequence[khulnasoft.Input[float]]]]:
        return khulnasoft.get(self, "list_secret_num2")

    @list_secret_num2.setter
    def list_secret_num2(self, value: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[float]]]]):
        khulnasoft.set(self, "list_secret_num2", value)

    @property
    @khulnasoft.getter(name="listSecretNum3")
    def list_secret_num3(self) -> Optional[khulnasoft.Input[Sequence[khulnasoft.Input[float]]]]:
        return khulnasoft.get(self, "list_secret_num3")

    @list_secret_num3.setter
    def list_secret_num3(self, value: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[float]]]]):
        khulnasoft.set(self, "list_secret_num3", value)

    @property
    @khulnasoft.getter(name="listSecretString1")
    def list_secret_string1(self) -> Optional[khulnasoft.Input[Sequence[khulnasoft.Input[str]]]]:
        return khulnasoft.get(self, "list_secret_string1")

    @list_secret_string1.setter
    def list_secret_string1(self, value: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[str]]]]):
        khulnasoft.set(self, "list_secret_string1", value)

    @property
    @khulnasoft.getter(name="listSecretString2")
    def list_secret_string2(self) -> Optional[khulnasoft.Input[Sequence[khulnasoft.Input[str]]]]:
        return khulnasoft.get(self, "list_secret_string2")

    @list_secret_string2.setter
    def list_secret_string2(self, value: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[str]]]]):
        khulnasoft.set(self, "list_secret_string2", value)

    @property
    @khulnasoft.getter(name="listSecretString3")
    def list_secret_string3(self) -> Optional[khulnasoft.Input[Sequence[khulnasoft.Input[str]]]]:
        return khulnasoft.get(self, "list_secret_string3")

    @list_secret_string3.setter
    def list_secret_string3(self, value: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[str]]]]):
        khulnasoft.set(self, "list_secret_string3", value)

    @property
    @khulnasoft.getter(name="listString1")
    def list_string1(self) -> Optional[khulnasoft.Input[Sequence[khulnasoft.Input[str]]]]:
        return khulnasoft.get(self, "list_string1")

    @list_string1.setter
    def list_string1(self, value: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[str]]]]):
        khulnasoft.set(self, "list_string1", value)

    @property
    @khulnasoft.getter(name="listString2")
    def list_string2(self) -> Optional[khulnasoft.Input[Sequence[khulnasoft.Input[str]]]]:
        return khulnasoft.get(self, "list_string2")

    @list_string2.setter
    def list_string2(self, value: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[str]]]]):
        khulnasoft.set(self, "list_string2", value)

    @property
    @khulnasoft.getter(name="listString3")
    def list_string3(self) -> Optional[khulnasoft.Input[Sequence[khulnasoft.Input[str]]]]:
        return khulnasoft.get(self, "list_string3")

    @list_string3.setter
    def list_string3(self, value: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[str]]]]):
        khulnasoft.set(self, "list_string3", value)

    @property
    @khulnasoft.getter(name="mapBool1")
    def map_bool1(self) -> Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[bool]]]]:
        return khulnasoft.get(self, "map_bool1")

    @map_bool1.setter
    def map_bool1(self, value: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[bool]]]]):
        khulnasoft.set(self, "map_bool1", value)

    @property
    @khulnasoft.getter(name="mapBool2")
    def map_bool2(self) -> Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[bool]]]]:
        return khulnasoft.get(self, "map_bool2")

    @map_bool2.setter
    def map_bool2(self, value: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[bool]]]]):
        khulnasoft.set(self, "map_bool2", value)

    @property
    @khulnasoft.getter(name="mapBool3")
    def map_bool3(self) -> Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[bool]]]]:
        return khulnasoft.get(self, "map_bool3")

    @map_bool3.setter
    def map_bool3(self, value: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[bool]]]]):
        khulnasoft.set(self, "map_bool3", value)

    @property
    @khulnasoft.getter(name="mapInt1")
    def map_int1(self) -> Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[int]]]]:
        return khulnasoft.get(self, "map_int1")

    @map_int1.setter
    def map_int1(self, value: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[int]]]]):
        khulnasoft.set(self, "map_int1", value)

    @property
    @khulnasoft.getter(name="mapInt2")
    def map_int2(self) -> Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[int]]]]:
        return khulnasoft.get(self, "map_int2")

    @map_int2.setter
    def map_int2(self, value: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[int]]]]):
        khulnasoft.set(self, "map_int2", value)

    @property
    @khulnasoft.getter(name="mapInt3")
    def map_int3(self) -> Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[int]]]]:
        return khulnasoft.get(self, "map_int3")

    @map_int3.setter
    def map_int3(self, value: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[int]]]]):
        khulnasoft.set(self, "map_int3", value)

    @property
    @khulnasoft.getter(name="mapNum1")
    def map_num1(self) -> Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[float]]]]:
        return khulnasoft.get(self, "map_num1")

    @map_num1.setter
    def map_num1(self, value: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[float]]]]):
        khulnasoft.set(self, "map_num1", value)

    @property
    @khulnasoft.getter(name="mapNum2")
    def map_num2(self) -> Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[float]]]]:
        return khulnasoft.get(self, "map_num2")

    @map_num2.setter
    def map_num2(self, value: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[float]]]]):
        khulnasoft.set(self, "map_num2", value)

    @property
    @khulnasoft.getter(name="mapNum3")
    def map_num3(self) -> Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[float]]]]:
        return khulnasoft.get(self, "map_num3")

    @map_num3.setter
    def map_num3(self, value: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[float]]]]):
        khulnasoft.set(self, "map_num3", value)

    @property
    @khulnasoft.getter(name="mapSecretBool1")
    def map_secret_bool1(self) -> Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[bool]]]]:
        return khulnasoft.get(self, "map_secret_bool1")

    @map_secret_bool1.setter
    def map_secret_bool1(self, value: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[bool]]]]):
        khulnasoft.set(self, "map_secret_bool1", value)

    @property
    @khulnasoft.getter(name="mapSecretBool2")
    def map_secret_bool2(self) -> Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[bool]]]]:
        return khulnasoft.get(self, "map_secret_bool2")

    @map_secret_bool2.setter
    def map_secret_bool2(self, value: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[bool]]]]):
        khulnasoft.set(self, "map_secret_bool2", value)

    @property
    @khulnasoft.getter(name="mapSecretBool3")
    def map_secret_bool3(self) -> Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[bool]]]]:
        return khulnasoft.get(self, "map_secret_bool3")

    @map_secret_bool3.setter
    def map_secret_bool3(self, value: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[bool]]]]):
        khulnasoft.set(self, "map_secret_bool3", value)

    @property
    @khulnasoft.getter(name="mapSecretInt1")
    def map_secret_int1(self) -> Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[int]]]]:
        return khulnasoft.get(self, "map_secret_int1")

    @map_secret_int1.setter
    def map_secret_int1(self, value: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[int]]]]):
        khulnasoft.set(self, "map_secret_int1", value)

    @property
    @khulnasoft.getter(name="mapSecretInt2")
    def map_secret_int2(self) -> Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[int]]]]:
        return khulnasoft.get(self, "map_secret_int2")

    @map_secret_int2.setter
    def map_secret_int2(self, value: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[int]]]]):
        khulnasoft.set(self, "map_secret_int2", value)

    @property
    @khulnasoft.getter(name="mapSecretInt3")
    def map_secret_int3(self) -> Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[int]]]]:
        return khulnasoft.get(self, "map_secret_int3")

    @map_secret_int3.setter
    def map_secret_int3(self, value: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[int]]]]):
        khulnasoft.set(self, "map_secret_int3", value)

    @property
    @khulnasoft.getter(name="mapSecretNum1")
    def map_secret_num1(self) -> Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[float]]]]:
        return khulnasoft.get(self, "map_secret_num1")

    @map_secret_num1.setter
    def map_secret_num1(self, value: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[float]]]]):
        khulnasoft.set(self, "map_secret_num1", value)

    @property
    @khulnasoft.getter(name="mapSecretNum2")
    def map_secret_num2(self) -> Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[float]]]]:
        return khulnasoft.get(self, "map_secret_num2")

    @map_secret_num2.setter
    def map_secret_num2(self, value: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[float]]]]):
        khulnasoft.set(self, "map_secret_num2", value)

    @property
    @khulnasoft.getter(name="mapSecretNum3")
    def map_secret_num3(self) -> Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[float]]]]:
        return khulnasoft.get(self, "map_secret_num3")

    @map_secret_num3.setter
    def map_secret_num3(self, value: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[float]]]]):
        khulnasoft.set(self, "map_secret_num3", value)

    @property
    @khulnasoft.getter(name="mapSecretString1")
    def map_secret_string1(self) -> Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[str]]]]:
        return khulnasoft.get(self, "map_secret_string1")

    @map_secret_string1.setter
    def map_secret_string1(self, value: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[str]]]]):
        khulnasoft.set(self, "map_secret_string1", value)

    @property
    @khulnasoft.getter(name="mapSecretString2")
    def map_secret_string2(self) -> Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[str]]]]:
        return khulnasoft.get(self, "map_secret_string2")

    @map_secret_string2.setter
    def map_secret_string2(self, value: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[str]]]]):
        khulnasoft.set(self, "map_secret_string2", value)

    @property
    @khulnasoft.getter(name="mapSecretString3")
    def map_secret_string3(self) -> Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[str]]]]:
        return khulnasoft.get(self, "map_secret_string3")

    @map_secret_string3.setter
    def map_secret_string3(self, value: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[str]]]]):
        khulnasoft.set(self, "map_secret_string3", value)

    @property
    @khulnasoft.getter(name="mapString1")
    def map_string1(self) -> Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[str]]]]:
        return khulnasoft.get(self, "map_string1")

    @map_string1.setter
    def map_string1(self, value: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[str]]]]):
        khulnasoft.set(self, "map_string1", value)

    @property
    @khulnasoft.getter(name="mapString2")
    def map_string2(self) -> Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[str]]]]:
        return khulnasoft.get(self, "map_string2")

    @map_string2.setter
    def map_string2(self, value: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[str]]]]):
        khulnasoft.set(self, "map_string2", value)

    @property
    @khulnasoft.getter(name="mapString3")
    def map_string3(self) -> Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[str]]]]:
        return khulnasoft.get(self, "map_string3")

    @map_string3.setter
    def map_string3(self, value: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[str]]]]):
        khulnasoft.set(self, "map_string3", value)

    @property
    @khulnasoft.getter
    def num1(self) -> Optional[khulnasoft.Input[float]]:
        return khulnasoft.get(self, "num1")

    @num1.setter
    def num1(self, value: Optional[khulnasoft.Input[float]]):
        khulnasoft.set(self, "num1", value)

    @property
    @khulnasoft.getter
    def num2(self) -> Optional[khulnasoft.Input[float]]:
        return khulnasoft.get(self, "num2")

    @num2.setter
    def num2(self, value: Optional[khulnasoft.Input[float]]):
        khulnasoft.set(self, "num2", value)

    @property
    @khulnasoft.getter
    def num3(self) -> Optional[khulnasoft.Input[float]]:
        return khulnasoft.get(self, "num3")

    @num3.setter
    def num3(self, value: Optional[khulnasoft.Input[float]]):
        khulnasoft.set(self, "num3", value)

    @property
    @khulnasoft.getter(name="objBool1")
    def obj_bool1(self) -> Optional[khulnasoft.Input['Tbool1Args']]:
        return khulnasoft.get(self, "obj_bool1")

    @obj_bool1.setter
    def obj_bool1(self, value: Optional[khulnasoft.Input['Tbool1Args']]):
        khulnasoft.set(self, "obj_bool1", value)

    @property
    @khulnasoft.getter(name="objBool2")
    def obj_bool2(self) -> Optional[khulnasoft.Input['Tbool2Args']]:
        return khulnasoft.get(self, "obj_bool2")

    @obj_bool2.setter
    def obj_bool2(self, value: Optional[khulnasoft.Input['Tbool2Args']]):
        khulnasoft.set(self, "obj_bool2", value)

    @property
    @khulnasoft.getter(name="objBool3")
    def obj_bool3(self) -> Optional[khulnasoft.Input['Tbool3Args']]:
        return khulnasoft.get(self, "obj_bool3")

    @obj_bool3.setter
    def obj_bool3(self, value: Optional[khulnasoft.Input['Tbool3Args']]):
        khulnasoft.set(self, "obj_bool3", value)

    @property
    @khulnasoft.getter(name="objInt1")
    def obj_int1(self) -> Optional[khulnasoft.Input['Tint1Args']]:
        return khulnasoft.get(self, "obj_int1")

    @obj_int1.setter
    def obj_int1(self, value: Optional[khulnasoft.Input['Tint1Args']]):
        khulnasoft.set(self, "obj_int1", value)

    @property
    @khulnasoft.getter(name="objInt2")
    def obj_int2(self) -> Optional[khulnasoft.Input['Tint2Args']]:
        return khulnasoft.get(self, "obj_int2")

    @obj_int2.setter
    def obj_int2(self, value: Optional[khulnasoft.Input['Tint2Args']]):
        khulnasoft.set(self, "obj_int2", value)

    @property
    @khulnasoft.getter(name="objInt3")
    def obj_int3(self) -> Optional[khulnasoft.Input['Tint3Args']]:
        return khulnasoft.get(self, "obj_int3")

    @obj_int3.setter
    def obj_int3(self, value: Optional[khulnasoft.Input['Tint3Args']]):
        khulnasoft.set(self, "obj_int3", value)

    @property
    @khulnasoft.getter(name="objNum1")
    def obj_num1(self) -> Optional[khulnasoft.Input['Tnum1Args']]:
        return khulnasoft.get(self, "obj_num1")

    @obj_num1.setter
    def obj_num1(self, value: Optional[khulnasoft.Input['Tnum1Args']]):
        khulnasoft.set(self, "obj_num1", value)

    @property
    @khulnasoft.getter(name="objNum2")
    def obj_num2(self) -> Optional[khulnasoft.Input['Tnum2Args']]:
        return khulnasoft.get(self, "obj_num2")

    @obj_num2.setter
    def obj_num2(self, value: Optional[khulnasoft.Input['Tnum2Args']]):
        khulnasoft.set(self, "obj_num2", value)

    @property
    @khulnasoft.getter(name="objNum3")
    def obj_num3(self) -> Optional[khulnasoft.Input['Tnum3Args']]:
        return khulnasoft.get(self, "obj_num3")

    @obj_num3.setter
    def obj_num3(self, value: Optional[khulnasoft.Input['Tnum3Args']]):
        khulnasoft.set(self, "obj_num3", value)

    @property
    @khulnasoft.getter(name="objSecretBool1")
    def obj_secret_bool1(self) -> Optional[khulnasoft.Input['TsecretBool1Args']]:
        return khulnasoft.get(self, "obj_secret_bool1")

    @obj_secret_bool1.setter
    def obj_secret_bool1(self, value: Optional[khulnasoft.Input['TsecretBool1Args']]):
        khulnasoft.set(self, "obj_secret_bool1", value)

    @property
    @khulnasoft.getter(name="objSecretBool2")
    def obj_secret_bool2(self) -> Optional[khulnasoft.Input['TsecretBool2Args']]:
        return khulnasoft.get(self, "obj_secret_bool2")

    @obj_secret_bool2.setter
    def obj_secret_bool2(self, value: Optional[khulnasoft.Input['TsecretBool2Args']]):
        khulnasoft.set(self, "obj_secret_bool2", value)

    @property
    @khulnasoft.getter(name="objSecretBool3")
    def obj_secret_bool3(self) -> Optional[khulnasoft.Input['TsecretBool3Args']]:
        return khulnasoft.get(self, "obj_secret_bool3")

    @obj_secret_bool3.setter
    def obj_secret_bool3(self, value: Optional[khulnasoft.Input['TsecretBool3Args']]):
        khulnasoft.set(self, "obj_secret_bool3", value)

    @property
    @khulnasoft.getter(name="objSecretInt1")
    def obj_secret_int1(self) -> Optional[khulnasoft.Input['TsecretInt1Args']]:
        return khulnasoft.get(self, "obj_secret_int1")

    @obj_secret_int1.setter
    def obj_secret_int1(self, value: Optional[khulnasoft.Input['TsecretInt1Args']]):
        khulnasoft.set(self, "obj_secret_int1", value)

    @property
    @khulnasoft.getter(name="objSecretInt2")
    def obj_secret_int2(self) -> Optional[khulnasoft.Input['TsecretInt2Args']]:
        return khulnasoft.get(self, "obj_secret_int2")

    @obj_secret_int2.setter
    def obj_secret_int2(self, value: Optional[khulnasoft.Input['TsecretInt2Args']]):
        khulnasoft.set(self, "obj_secret_int2", value)

    @property
    @khulnasoft.getter(name="objSecretInt3")
    def obj_secret_int3(self) -> Optional[khulnasoft.Input['TsecretInt3Args']]:
        return khulnasoft.get(self, "obj_secret_int3")

    @obj_secret_int3.setter
    def obj_secret_int3(self, value: Optional[khulnasoft.Input['TsecretInt3Args']]):
        khulnasoft.set(self, "obj_secret_int3", value)

    @property
    @khulnasoft.getter(name="objSecretNum1")
    def obj_secret_num1(self) -> Optional[khulnasoft.Input['TsecretNum1Args']]:
        return khulnasoft.get(self, "obj_secret_num1")

    @obj_secret_num1.setter
    def obj_secret_num1(self, value: Optional[khulnasoft.Input['TsecretNum1Args']]):
        khulnasoft.set(self, "obj_secret_num1", value)

    @property
    @khulnasoft.getter(name="objSecretNum2")
    def obj_secret_num2(self) -> Optional[khulnasoft.Input['TsecretNum2Args']]:
        return khulnasoft.get(self, "obj_secret_num2")

    @obj_secret_num2.setter
    def obj_secret_num2(self, value: Optional[khulnasoft.Input['TsecretNum2Args']]):
        khulnasoft.set(self, "obj_secret_num2", value)

    @property
    @khulnasoft.getter(name="objSecretNum3")
    def obj_secret_num3(self) -> Optional[khulnasoft.Input['TsecretNum3Args']]:
        return khulnasoft.get(self, "obj_secret_num3")

    @obj_secret_num3.setter
    def obj_secret_num3(self, value: Optional[khulnasoft.Input['TsecretNum3Args']]):
        khulnasoft.set(self, "obj_secret_num3", value)

    @property
    @khulnasoft.getter(name="objSecretString1")
    def obj_secret_string1(self) -> Optional[khulnasoft.Input['TsecretString1Args']]:
        return khulnasoft.get(self, "obj_secret_string1")

    @obj_secret_string1.setter
    def obj_secret_string1(self, value: Optional[khulnasoft.Input['TsecretString1Args']]):
        khulnasoft.set(self, "obj_secret_string1", value)

    @property
    @khulnasoft.getter(name="objSecretString2")
    def obj_secret_string2(self) -> Optional[khulnasoft.Input['TsecretString2Args']]:
        return khulnasoft.get(self, "obj_secret_string2")

    @obj_secret_string2.setter
    def obj_secret_string2(self, value: Optional[khulnasoft.Input['TsecretString2Args']]):
        khulnasoft.set(self, "obj_secret_string2", value)

    @property
    @khulnasoft.getter(name="objSecretString3")
    def obj_secret_string3(self) -> Optional[khulnasoft.Input['TsecretString3Args']]:
        return khulnasoft.get(self, "obj_secret_string3")

    @obj_secret_string3.setter
    def obj_secret_string3(self, value: Optional[khulnasoft.Input['TsecretString3Args']]):
        khulnasoft.set(self, "obj_secret_string3", value)

    @property
    @khulnasoft.getter(name="objString1")
    def obj_string1(self) -> Optional[khulnasoft.Input['Tstring1Args']]:
        return khulnasoft.get(self, "obj_string1")

    @obj_string1.setter
    def obj_string1(self, value: Optional[khulnasoft.Input['Tstring1Args']]):
        khulnasoft.set(self, "obj_string1", value)

    @property
    @khulnasoft.getter(name="objString2")
    def obj_string2(self) -> Optional[khulnasoft.Input['Tstring2Args']]:
        return khulnasoft.get(self, "obj_string2")

    @obj_string2.setter
    def obj_string2(self, value: Optional[khulnasoft.Input['Tstring2Args']]):
        khulnasoft.set(self, "obj_string2", value)

    @property
    @khulnasoft.getter(name="objString3")
    def obj_string3(self) -> Optional[khulnasoft.Input['Tstring3Args']]:
        return khulnasoft.get(self, "obj_string3")

    @obj_string3.setter
    def obj_string3(self, value: Optional[khulnasoft.Input['Tstring3Args']]):
        khulnasoft.set(self, "obj_string3", value)

    @property
    @khulnasoft.getter(name="secretBool1")
    def secret_bool1(self) -> Optional[khulnasoft.Input[bool]]:
        return khulnasoft.get(self, "secret_bool1")

    @secret_bool1.setter
    def secret_bool1(self, value: Optional[khulnasoft.Input[bool]]):
        khulnasoft.set(self, "secret_bool1", value)

    @property
    @khulnasoft.getter(name="secretBool2")
    def secret_bool2(self) -> Optional[khulnasoft.Input[bool]]:
        return khulnasoft.get(self, "secret_bool2")

    @secret_bool2.setter
    def secret_bool2(self, value: Optional[khulnasoft.Input[bool]]):
        khulnasoft.set(self, "secret_bool2", value)

    @property
    @khulnasoft.getter(name="secretBool3")
    def secret_bool3(self) -> Optional[khulnasoft.Input[bool]]:
        return khulnasoft.get(self, "secret_bool3")

    @secret_bool3.setter
    def secret_bool3(self, value: Optional[khulnasoft.Input[bool]]):
        khulnasoft.set(self, "secret_bool3", value)

    @property
    @khulnasoft.getter(name="secretInt1")
    def secret_int1(self) -> Optional[khulnasoft.Input[int]]:
        return khulnasoft.get(self, "secret_int1")

    @secret_int1.setter
    def secret_int1(self, value: Optional[khulnasoft.Input[int]]):
        khulnasoft.set(self, "secret_int1", value)

    @property
    @khulnasoft.getter(name="secretInt2")
    def secret_int2(self) -> Optional[khulnasoft.Input[int]]:
        return khulnasoft.get(self, "secret_int2")

    @secret_int2.setter
    def secret_int2(self, value: Optional[khulnasoft.Input[int]]):
        khulnasoft.set(self, "secret_int2", value)

    @property
    @khulnasoft.getter(name="secretInt3")
    def secret_int3(self) -> Optional[khulnasoft.Input[int]]:
        return khulnasoft.get(self, "secret_int3")

    @secret_int3.setter
    def secret_int3(self, value: Optional[khulnasoft.Input[int]]):
        khulnasoft.set(self, "secret_int3", value)

    @property
    @khulnasoft.getter(name="secretNum1")
    def secret_num1(self) -> Optional[khulnasoft.Input[float]]:
        return khulnasoft.get(self, "secret_num1")

    @secret_num1.setter
    def secret_num1(self, value: Optional[khulnasoft.Input[float]]):
        khulnasoft.set(self, "secret_num1", value)

    @property
    @khulnasoft.getter(name="secretNum2")
    def secret_num2(self) -> Optional[khulnasoft.Input[float]]:
        return khulnasoft.get(self, "secret_num2")

    @secret_num2.setter
    def secret_num2(self, value: Optional[khulnasoft.Input[float]]):
        khulnasoft.set(self, "secret_num2", value)

    @property
    @khulnasoft.getter(name="secretNum3")
    def secret_num3(self) -> Optional[khulnasoft.Input[float]]:
        return khulnasoft.get(self, "secret_num3")

    @secret_num3.setter
    def secret_num3(self, value: Optional[khulnasoft.Input[float]]):
        khulnasoft.set(self, "secret_num3", value)

    @property
    @khulnasoft.getter(name="secretString1")
    def secret_string1(self) -> Optional[khulnasoft.Input[str]]:
        return khulnasoft.get(self, "secret_string1")

    @secret_string1.setter
    def secret_string1(self, value: Optional[khulnasoft.Input[str]]):
        khulnasoft.set(self, "secret_string1", value)

    @property
    @khulnasoft.getter(name="secretString2")
    def secret_string2(self) -> Optional[khulnasoft.Input[str]]:
        return khulnasoft.get(self, "secret_string2")

    @secret_string2.setter
    def secret_string2(self, value: Optional[khulnasoft.Input[str]]):
        khulnasoft.set(self, "secret_string2", value)

    @property
    @khulnasoft.getter(name="secretString3")
    def secret_string3(self) -> Optional[khulnasoft.Input[str]]:
        return khulnasoft.get(self, "secret_string3")

    @secret_string3.setter
    def secret_string3(self, value: Optional[khulnasoft.Input[str]]):
        khulnasoft.set(self, "secret_string3", value)

    @property
    @khulnasoft.getter
    def string1(self) -> Optional[khulnasoft.Input[str]]:
        return khulnasoft.get(self, "string1")

    @string1.setter
    def string1(self, value: Optional[khulnasoft.Input[str]]):
        khulnasoft.set(self, "string1", value)

    @property
    @khulnasoft.getter
    def string2(self) -> Optional[khulnasoft.Input[str]]:
        return khulnasoft.get(self, "string2")

    @string2.setter
    def string2(self, value: Optional[khulnasoft.Input[str]]):
        khulnasoft.set(self, "string2", value)

    @property
    @khulnasoft.getter
    def string3(self) -> Optional[khulnasoft.Input[str]]:
        return khulnasoft.get(self, "string3")

    @string3.setter
    def string3(self, value: Optional[khulnasoft.Input[str]]):
        khulnasoft.set(self, "string3", value)


class Provider(khulnasoft.ProviderResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[khulnasoft.ResourceOptions] = None,
                 bool1: Optional[khulnasoft.Input[bool]] = None,
                 bool2: Optional[khulnasoft.Input[bool]] = None,
                 bool3: Optional[khulnasoft.Input[bool]] = None,
                 int1: Optional[khulnasoft.Input[int]] = None,
                 int2: Optional[khulnasoft.Input[int]] = None,
                 int3: Optional[khulnasoft.Input[int]] = None,
                 list_bool1: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[bool]]]] = None,
                 list_bool2: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[bool]]]] = None,
                 list_bool3: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[bool]]]] = None,
                 list_int1: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[int]]]] = None,
                 list_int2: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[int]]]] = None,
                 list_int3: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[int]]]] = None,
                 list_num1: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[float]]]] = None,
                 list_num2: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[float]]]] = None,
                 list_num3: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[float]]]] = None,
                 list_secret_bool1: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[bool]]]] = None,
                 list_secret_bool2: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[bool]]]] = None,
                 list_secret_bool3: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[bool]]]] = None,
                 list_secret_int1: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[int]]]] = None,
                 list_secret_int2: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[int]]]] = None,
                 list_secret_int3: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[int]]]] = None,
                 list_secret_num1: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[float]]]] = None,
                 list_secret_num2: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[float]]]] = None,
                 list_secret_num3: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[float]]]] = None,
                 list_secret_string1: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[str]]]] = None,
                 list_secret_string2: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[str]]]] = None,
                 list_secret_string3: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[str]]]] = None,
                 list_string1: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[str]]]] = None,
                 list_string2: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[str]]]] = None,
                 list_string3: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[str]]]] = None,
                 map_bool1: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[bool]]]] = None,
                 map_bool2: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[bool]]]] = None,
                 map_bool3: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[bool]]]] = None,
                 map_int1: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[int]]]] = None,
                 map_int2: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[int]]]] = None,
                 map_int3: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[int]]]] = None,
                 map_num1: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[float]]]] = None,
                 map_num2: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[float]]]] = None,
                 map_num3: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[float]]]] = None,
                 map_secret_bool1: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[bool]]]] = None,
                 map_secret_bool2: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[bool]]]] = None,
                 map_secret_bool3: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[bool]]]] = None,
                 map_secret_int1: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[int]]]] = None,
                 map_secret_int2: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[int]]]] = None,
                 map_secret_int3: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[int]]]] = None,
                 map_secret_num1: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[float]]]] = None,
                 map_secret_num2: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[float]]]] = None,
                 map_secret_num3: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[float]]]] = None,
                 map_secret_string1: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[str]]]] = None,
                 map_secret_string2: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[str]]]] = None,
                 map_secret_string3: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[str]]]] = None,
                 map_string1: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[str]]]] = None,
                 map_string2: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[str]]]] = None,
                 map_string3: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[str]]]] = None,
                 num1: Optional[khulnasoft.Input[float]] = None,
                 num2: Optional[khulnasoft.Input[float]] = None,
                 num3: Optional[khulnasoft.Input[float]] = None,
                 obj_bool1: Optional[khulnasoft.Input[khulnasoft.InputType['Tbool1Args']]] = None,
                 obj_bool2: Optional[khulnasoft.Input[khulnasoft.InputType['Tbool2Args']]] = None,
                 obj_bool3: Optional[khulnasoft.Input[khulnasoft.InputType['Tbool3Args']]] = None,
                 obj_int1: Optional[khulnasoft.Input[khulnasoft.InputType['Tint1Args']]] = None,
                 obj_int2: Optional[khulnasoft.Input[khulnasoft.InputType['Tint2Args']]] = None,
                 obj_int3: Optional[khulnasoft.Input[khulnasoft.InputType['Tint3Args']]] = None,
                 obj_num1: Optional[khulnasoft.Input[khulnasoft.InputType['Tnum1Args']]] = None,
                 obj_num2: Optional[khulnasoft.Input[khulnasoft.InputType['Tnum2Args']]] = None,
                 obj_num3: Optional[khulnasoft.Input[khulnasoft.InputType['Tnum3Args']]] = None,
                 obj_secret_bool1: Optional[khulnasoft.Input[khulnasoft.InputType['TsecretBool1Args']]] = None,
                 obj_secret_bool2: Optional[khulnasoft.Input[khulnasoft.InputType['TsecretBool2Args']]] = None,
                 obj_secret_bool3: Optional[khulnasoft.Input[khulnasoft.InputType['TsecretBool3Args']]] = None,
                 obj_secret_int1: Optional[khulnasoft.Input[khulnasoft.InputType['TsecretInt1Args']]] = None,
                 obj_secret_int2: Optional[khulnasoft.Input[khulnasoft.InputType['TsecretInt2Args']]] = None,
                 obj_secret_int3: Optional[khulnasoft.Input[khulnasoft.InputType['TsecretInt3Args']]] = None,
                 obj_secret_num1: Optional[khulnasoft.Input[khulnasoft.InputType['TsecretNum1Args']]] = None,
                 obj_secret_num2: Optional[khulnasoft.Input[khulnasoft.InputType['TsecretNum2Args']]] = None,
                 obj_secret_num3: Optional[khulnasoft.Input[khulnasoft.InputType['TsecretNum3Args']]] = None,
                 obj_secret_string1: Optional[khulnasoft.Input[khulnasoft.InputType['TsecretString1Args']]] = None,
                 obj_secret_string2: Optional[khulnasoft.Input[khulnasoft.InputType['TsecretString2Args']]] = None,
                 obj_secret_string3: Optional[khulnasoft.Input[khulnasoft.InputType['TsecretString3Args']]] = None,
                 obj_string1: Optional[khulnasoft.Input[khulnasoft.InputType['Tstring1Args']]] = None,
                 obj_string2: Optional[khulnasoft.Input[khulnasoft.InputType['Tstring2Args']]] = None,
                 obj_string3: Optional[khulnasoft.Input[khulnasoft.InputType['Tstring3Args']]] = None,
                 secret_bool1: Optional[khulnasoft.Input[bool]] = None,
                 secret_bool2: Optional[khulnasoft.Input[bool]] = None,
                 secret_bool3: Optional[khulnasoft.Input[bool]] = None,
                 secret_int1: Optional[khulnasoft.Input[int]] = None,
                 secret_int2: Optional[khulnasoft.Input[int]] = None,
                 secret_int3: Optional[khulnasoft.Input[int]] = None,
                 secret_num1: Optional[khulnasoft.Input[float]] = None,
                 secret_num2: Optional[khulnasoft.Input[float]] = None,
                 secret_num3: Optional[khulnasoft.Input[float]] = None,
                 secret_string1: Optional[khulnasoft.Input[str]] = None,
                 secret_string2: Optional[khulnasoft.Input[str]] = None,
                 secret_string3: Optional[khulnasoft.Input[str]] = None,
                 string1: Optional[khulnasoft.Input[str]] = None,
                 string2: Optional[khulnasoft.Input[str]] = None,
                 string3: Optional[khulnasoft.Input[str]] = None,
                 __props__=None):
        """
        Create a Config-grpc resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param khulnasoft.ResourceOptions opts: Options for the resource.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[ProviderArgs] = None,
                 opts: Optional[khulnasoft.ResourceOptions] = None):
        """
        Create a Config-grpc resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param ProviderArgs args: The arguments to use to populate this resource's properties.
        :param khulnasoft.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(ProviderArgs, khulnasoft.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[khulnasoft.ResourceOptions] = None,
                 bool1: Optional[khulnasoft.Input[bool]] = None,
                 bool2: Optional[khulnasoft.Input[bool]] = None,
                 bool3: Optional[khulnasoft.Input[bool]] = None,
                 int1: Optional[khulnasoft.Input[int]] = None,
                 int2: Optional[khulnasoft.Input[int]] = None,
                 int3: Optional[khulnasoft.Input[int]] = None,
                 list_bool1: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[bool]]]] = None,
                 list_bool2: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[bool]]]] = None,
                 list_bool3: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[bool]]]] = None,
                 list_int1: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[int]]]] = None,
                 list_int2: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[int]]]] = None,
                 list_int3: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[int]]]] = None,
                 list_num1: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[float]]]] = None,
                 list_num2: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[float]]]] = None,
                 list_num3: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[float]]]] = None,
                 list_secret_bool1: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[bool]]]] = None,
                 list_secret_bool2: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[bool]]]] = None,
                 list_secret_bool3: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[bool]]]] = None,
                 list_secret_int1: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[int]]]] = None,
                 list_secret_int2: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[int]]]] = None,
                 list_secret_int3: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[int]]]] = None,
                 list_secret_num1: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[float]]]] = None,
                 list_secret_num2: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[float]]]] = None,
                 list_secret_num3: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[float]]]] = None,
                 list_secret_string1: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[str]]]] = None,
                 list_secret_string2: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[str]]]] = None,
                 list_secret_string3: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[str]]]] = None,
                 list_string1: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[str]]]] = None,
                 list_string2: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[str]]]] = None,
                 list_string3: Optional[khulnasoft.Input[Sequence[khulnasoft.Input[str]]]] = None,
                 map_bool1: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[bool]]]] = None,
                 map_bool2: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[bool]]]] = None,
                 map_bool3: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[bool]]]] = None,
                 map_int1: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[int]]]] = None,
                 map_int2: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[int]]]] = None,
                 map_int3: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[int]]]] = None,
                 map_num1: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[float]]]] = None,
                 map_num2: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[float]]]] = None,
                 map_num3: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[float]]]] = None,
                 map_secret_bool1: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[bool]]]] = None,
                 map_secret_bool2: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[bool]]]] = None,
                 map_secret_bool3: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[bool]]]] = None,
                 map_secret_int1: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[int]]]] = None,
                 map_secret_int2: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[int]]]] = None,
                 map_secret_int3: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[int]]]] = None,
                 map_secret_num1: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[float]]]] = None,
                 map_secret_num2: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[float]]]] = None,
                 map_secret_num3: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[float]]]] = None,
                 map_secret_string1: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[str]]]] = None,
                 map_secret_string2: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[str]]]] = None,
                 map_secret_string3: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[str]]]] = None,
                 map_string1: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[str]]]] = None,
                 map_string2: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[str]]]] = None,
                 map_string3: Optional[khulnasoft.Input[Mapping[str, khulnasoft.Input[str]]]] = None,
                 num1: Optional[khulnasoft.Input[float]] = None,
                 num2: Optional[khulnasoft.Input[float]] = None,
                 num3: Optional[khulnasoft.Input[float]] = None,
                 obj_bool1: Optional[khulnasoft.Input[khulnasoft.InputType['Tbool1Args']]] = None,
                 obj_bool2: Optional[khulnasoft.Input[khulnasoft.InputType['Tbool2Args']]] = None,
                 obj_bool3: Optional[khulnasoft.Input[khulnasoft.InputType['Tbool3Args']]] = None,
                 obj_int1: Optional[khulnasoft.Input[khulnasoft.InputType['Tint1Args']]] = None,
                 obj_int2: Optional[khulnasoft.Input[khulnasoft.InputType['Tint2Args']]] = None,
                 obj_int3: Optional[khulnasoft.Input[khulnasoft.InputType['Tint3Args']]] = None,
                 obj_num1: Optional[khulnasoft.Input[khulnasoft.InputType['Tnum1Args']]] = None,
                 obj_num2: Optional[khulnasoft.Input[khulnasoft.InputType['Tnum2Args']]] = None,
                 obj_num3: Optional[khulnasoft.Input[khulnasoft.InputType['Tnum3Args']]] = None,
                 obj_secret_bool1: Optional[khulnasoft.Input[khulnasoft.InputType['TsecretBool1Args']]] = None,
                 obj_secret_bool2: Optional[khulnasoft.Input[khulnasoft.InputType['TsecretBool2Args']]] = None,
                 obj_secret_bool3: Optional[khulnasoft.Input[khulnasoft.InputType['TsecretBool3Args']]] = None,
                 obj_secret_int1: Optional[khulnasoft.Input[khulnasoft.InputType['TsecretInt1Args']]] = None,
                 obj_secret_int2: Optional[khulnasoft.Input[khulnasoft.InputType['TsecretInt2Args']]] = None,
                 obj_secret_int3: Optional[khulnasoft.Input[khulnasoft.InputType['TsecretInt3Args']]] = None,
                 obj_secret_num1: Optional[khulnasoft.Input[khulnasoft.InputType['TsecretNum1Args']]] = None,
                 obj_secret_num2: Optional[khulnasoft.Input[khulnasoft.InputType['TsecretNum2Args']]] = None,
                 obj_secret_num3: Optional[khulnasoft.Input[khulnasoft.InputType['TsecretNum3Args']]] = None,
                 obj_secret_string1: Optional[khulnasoft.Input[khulnasoft.InputType['TsecretString1Args']]] = None,
                 obj_secret_string2: Optional[khulnasoft.Input[khulnasoft.InputType['TsecretString2Args']]] = None,
                 obj_secret_string3: Optional[khulnasoft.Input[khulnasoft.InputType['TsecretString3Args']]] = None,
                 obj_string1: Optional[khulnasoft.Input[khulnasoft.InputType['Tstring1Args']]] = None,
                 obj_string2: Optional[khulnasoft.Input[khulnasoft.InputType['Tstring2Args']]] = None,
                 obj_string3: Optional[khulnasoft.Input[khulnasoft.InputType['Tstring3Args']]] = None,
                 secret_bool1: Optional[khulnasoft.Input[bool]] = None,
                 secret_bool2: Optional[khulnasoft.Input[bool]] = None,
                 secret_bool3: Optional[khulnasoft.Input[bool]] = None,
                 secret_int1: Optional[khulnasoft.Input[int]] = None,
                 secret_int2: Optional[khulnasoft.Input[int]] = None,
                 secret_int3: Optional[khulnasoft.Input[int]] = None,
                 secret_num1: Optional[khulnasoft.Input[float]] = None,
                 secret_num2: Optional[khulnasoft.Input[float]] = None,
                 secret_num3: Optional[khulnasoft.Input[float]] = None,
                 secret_string1: Optional[khulnasoft.Input[str]] = None,
                 secret_string2: Optional[khulnasoft.Input[str]] = None,
                 secret_string3: Optional[khulnasoft.Input[str]] = None,
                 string1: Optional[khulnasoft.Input[str]] = None,
                 string2: Optional[khulnasoft.Input[str]] = None,
                 string3: Optional[khulnasoft.Input[str]] = None,
                 __props__=None):
        opts = khulnasoft.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, khulnasoft.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = ProviderArgs.__new__(ProviderArgs)

            __props__.__dict__["bool1"] = khulnasoft.Output.from_input(bool1).apply(khulnasoft.runtime.to_json) if bool1 is not None else None
            __props__.__dict__["bool2"] = khulnasoft.Output.from_input(bool2).apply(khulnasoft.runtime.to_json) if bool2 is not None else None
            __props__.__dict__["bool3"] = khulnasoft.Output.from_input(bool3).apply(khulnasoft.runtime.to_json) if bool3 is not None else None
            __props__.__dict__["int1"] = khulnasoft.Output.from_input(int1).apply(khulnasoft.runtime.to_json) if int1 is not None else None
            __props__.__dict__["int2"] = khulnasoft.Output.from_input(int2).apply(khulnasoft.runtime.to_json) if int2 is not None else None
            __props__.__dict__["int3"] = khulnasoft.Output.from_input(int3).apply(khulnasoft.runtime.to_json) if int3 is not None else None
            __props__.__dict__["list_bool1"] = khulnasoft.Output.from_input(list_bool1).apply(khulnasoft.runtime.to_json) if list_bool1 is not None else None
            __props__.__dict__["list_bool2"] = khulnasoft.Output.from_input(list_bool2).apply(khulnasoft.runtime.to_json) if list_bool2 is not None else None
            __props__.__dict__["list_bool3"] = khulnasoft.Output.from_input(list_bool3).apply(khulnasoft.runtime.to_json) if list_bool3 is not None else None
            __props__.__dict__["list_int1"] = khulnasoft.Output.from_input(list_int1).apply(khulnasoft.runtime.to_json) if list_int1 is not None else None
            __props__.__dict__["list_int2"] = khulnasoft.Output.from_input(list_int2).apply(khulnasoft.runtime.to_json) if list_int2 is not None else None
            __props__.__dict__["list_int3"] = khulnasoft.Output.from_input(list_int3).apply(khulnasoft.runtime.to_json) if list_int3 is not None else None
            __props__.__dict__["list_num1"] = khulnasoft.Output.from_input(list_num1).apply(khulnasoft.runtime.to_json) if list_num1 is not None else None
            __props__.__dict__["list_num2"] = khulnasoft.Output.from_input(list_num2).apply(khulnasoft.runtime.to_json) if list_num2 is not None else None
            __props__.__dict__["list_num3"] = khulnasoft.Output.from_input(list_num3).apply(khulnasoft.runtime.to_json) if list_num3 is not None else None
            __props__.__dict__["list_secret_bool1"] = khulnasoft.Output.secret(list_secret_bool1).apply(khulnasoft.runtime.to_json) if list_secret_bool1 is not None else None
            __props__.__dict__["list_secret_bool2"] = khulnasoft.Output.secret(list_secret_bool2).apply(khulnasoft.runtime.to_json) if list_secret_bool2 is not None else None
            __props__.__dict__["list_secret_bool3"] = khulnasoft.Output.secret(list_secret_bool3).apply(khulnasoft.runtime.to_json) if list_secret_bool3 is not None else None
            __props__.__dict__["list_secret_int1"] = khulnasoft.Output.secret(list_secret_int1).apply(khulnasoft.runtime.to_json) if list_secret_int1 is not None else None
            __props__.__dict__["list_secret_int2"] = khulnasoft.Output.secret(list_secret_int2).apply(khulnasoft.runtime.to_json) if list_secret_int2 is not None else None
            __props__.__dict__["list_secret_int3"] = khulnasoft.Output.secret(list_secret_int3).apply(khulnasoft.runtime.to_json) if list_secret_int3 is not None else None
            __props__.__dict__["list_secret_num1"] = khulnasoft.Output.secret(list_secret_num1).apply(khulnasoft.runtime.to_json) if list_secret_num1 is not None else None
            __props__.__dict__["list_secret_num2"] = khulnasoft.Output.secret(list_secret_num2).apply(khulnasoft.runtime.to_json) if list_secret_num2 is not None else None
            __props__.__dict__["list_secret_num3"] = khulnasoft.Output.secret(list_secret_num3).apply(khulnasoft.runtime.to_json) if list_secret_num3 is not None else None
            __props__.__dict__["list_secret_string1"] = khulnasoft.Output.secret(list_secret_string1).apply(khulnasoft.runtime.to_json) if list_secret_string1 is not None else None
            __props__.__dict__["list_secret_string2"] = khulnasoft.Output.secret(list_secret_string2).apply(khulnasoft.runtime.to_json) if list_secret_string2 is not None else None
            __props__.__dict__["list_secret_string3"] = khulnasoft.Output.secret(list_secret_string3).apply(khulnasoft.runtime.to_json) if list_secret_string3 is not None else None
            __props__.__dict__["list_string1"] = khulnasoft.Output.from_input(list_string1).apply(khulnasoft.runtime.to_json) if list_string1 is not None else None
            __props__.__dict__["list_string2"] = khulnasoft.Output.from_input(list_string2).apply(khulnasoft.runtime.to_json) if list_string2 is not None else None
            __props__.__dict__["list_string3"] = khulnasoft.Output.from_input(list_string3).apply(khulnasoft.runtime.to_json) if list_string3 is not None else None
            __props__.__dict__["map_bool1"] = khulnasoft.Output.from_input(map_bool1).apply(khulnasoft.runtime.to_json) if map_bool1 is not None else None
            __props__.__dict__["map_bool2"] = khulnasoft.Output.from_input(map_bool2).apply(khulnasoft.runtime.to_json) if map_bool2 is not None else None
            __props__.__dict__["map_bool3"] = khulnasoft.Output.from_input(map_bool3).apply(khulnasoft.runtime.to_json) if map_bool3 is not None else None
            __props__.__dict__["map_int1"] = khulnasoft.Output.from_input(map_int1).apply(khulnasoft.runtime.to_json) if map_int1 is not None else None
            __props__.__dict__["map_int2"] = khulnasoft.Output.from_input(map_int2).apply(khulnasoft.runtime.to_json) if map_int2 is not None else None
            __props__.__dict__["map_int3"] = khulnasoft.Output.from_input(map_int3).apply(khulnasoft.runtime.to_json) if map_int3 is not None else None
            __props__.__dict__["map_num1"] = khulnasoft.Output.from_input(map_num1).apply(khulnasoft.runtime.to_json) if map_num1 is not None else None
            __props__.__dict__["map_num2"] = khulnasoft.Output.from_input(map_num2).apply(khulnasoft.runtime.to_json) if map_num2 is not None else None
            __props__.__dict__["map_num3"] = khulnasoft.Output.from_input(map_num3).apply(khulnasoft.runtime.to_json) if map_num3 is not None else None
            __props__.__dict__["map_secret_bool1"] = khulnasoft.Output.secret(map_secret_bool1).apply(khulnasoft.runtime.to_json) if map_secret_bool1 is not None else None
            __props__.__dict__["map_secret_bool2"] = khulnasoft.Output.secret(map_secret_bool2).apply(khulnasoft.runtime.to_json) if map_secret_bool2 is not None else None
            __props__.__dict__["map_secret_bool3"] = khulnasoft.Output.secret(map_secret_bool3).apply(khulnasoft.runtime.to_json) if map_secret_bool3 is not None else None
            __props__.__dict__["map_secret_int1"] = khulnasoft.Output.secret(map_secret_int1).apply(khulnasoft.runtime.to_json) if map_secret_int1 is not None else None
            __props__.__dict__["map_secret_int2"] = khulnasoft.Output.secret(map_secret_int2).apply(khulnasoft.runtime.to_json) if map_secret_int2 is not None else None
            __props__.__dict__["map_secret_int3"] = khulnasoft.Output.secret(map_secret_int3).apply(khulnasoft.runtime.to_json) if map_secret_int3 is not None else None
            __props__.__dict__["map_secret_num1"] = khulnasoft.Output.secret(map_secret_num1).apply(khulnasoft.runtime.to_json) if map_secret_num1 is not None else None
            __props__.__dict__["map_secret_num2"] = khulnasoft.Output.secret(map_secret_num2).apply(khulnasoft.runtime.to_json) if map_secret_num2 is not None else None
            __props__.__dict__["map_secret_num3"] = khulnasoft.Output.secret(map_secret_num3).apply(khulnasoft.runtime.to_json) if map_secret_num3 is not None else None
            __props__.__dict__["map_secret_string1"] = khulnasoft.Output.secret(map_secret_string1).apply(khulnasoft.runtime.to_json) if map_secret_string1 is not None else None
            __props__.__dict__["map_secret_string2"] = khulnasoft.Output.secret(map_secret_string2).apply(khulnasoft.runtime.to_json) if map_secret_string2 is not None else None
            __props__.__dict__["map_secret_string3"] = khulnasoft.Output.secret(map_secret_string3).apply(khulnasoft.runtime.to_json) if map_secret_string3 is not None else None
            __props__.__dict__["map_string1"] = khulnasoft.Output.from_input(map_string1).apply(khulnasoft.runtime.to_json) if map_string1 is not None else None
            __props__.__dict__["map_string2"] = khulnasoft.Output.from_input(map_string2).apply(khulnasoft.runtime.to_json) if map_string2 is not None else None
            __props__.__dict__["map_string3"] = khulnasoft.Output.from_input(map_string3).apply(khulnasoft.runtime.to_json) if map_string3 is not None else None
            __props__.__dict__["num1"] = khulnasoft.Output.from_input(num1).apply(khulnasoft.runtime.to_json) if num1 is not None else None
            __props__.__dict__["num2"] = khulnasoft.Output.from_input(num2).apply(khulnasoft.runtime.to_json) if num2 is not None else None
            __props__.__dict__["num3"] = khulnasoft.Output.from_input(num3).apply(khulnasoft.runtime.to_json) if num3 is not None else None
            __props__.__dict__["obj_bool1"] = khulnasoft.Output.from_input(obj_bool1).apply(khulnasoft.runtime.to_json) if obj_bool1 is not None else None
            __props__.__dict__["obj_bool2"] = khulnasoft.Output.from_input(obj_bool2).apply(khulnasoft.runtime.to_json) if obj_bool2 is not None else None
            __props__.__dict__["obj_bool3"] = khulnasoft.Output.from_input(obj_bool3).apply(khulnasoft.runtime.to_json) if obj_bool3 is not None else None
            __props__.__dict__["obj_int1"] = khulnasoft.Output.from_input(obj_int1).apply(khulnasoft.runtime.to_json) if obj_int1 is not None else None
            __props__.__dict__["obj_int2"] = khulnasoft.Output.from_input(obj_int2).apply(khulnasoft.runtime.to_json) if obj_int2 is not None else None
            __props__.__dict__["obj_int3"] = khulnasoft.Output.from_input(obj_int3).apply(khulnasoft.runtime.to_json) if obj_int3 is not None else None
            __props__.__dict__["obj_num1"] = khulnasoft.Output.from_input(obj_num1).apply(khulnasoft.runtime.to_json) if obj_num1 is not None else None
            __props__.__dict__["obj_num2"] = khulnasoft.Output.from_input(obj_num2).apply(khulnasoft.runtime.to_json) if obj_num2 is not None else None
            __props__.__dict__["obj_num3"] = khulnasoft.Output.from_input(obj_num3).apply(khulnasoft.runtime.to_json) if obj_num3 is not None else None
            __props__.__dict__["obj_secret_bool1"] = khulnasoft.Output.secret(obj_secret_bool1).apply(khulnasoft.runtime.to_json) if obj_secret_bool1 is not None else None
            __props__.__dict__["obj_secret_bool2"] = khulnasoft.Output.secret(obj_secret_bool2).apply(khulnasoft.runtime.to_json) if obj_secret_bool2 is not None else None
            __props__.__dict__["obj_secret_bool3"] = khulnasoft.Output.secret(obj_secret_bool3).apply(khulnasoft.runtime.to_json) if obj_secret_bool3 is not None else None
            __props__.__dict__["obj_secret_int1"] = khulnasoft.Output.secret(obj_secret_int1).apply(khulnasoft.runtime.to_json) if obj_secret_int1 is not None else None
            __props__.__dict__["obj_secret_int2"] = khulnasoft.Output.secret(obj_secret_int2).apply(khulnasoft.runtime.to_json) if obj_secret_int2 is not None else None
            __props__.__dict__["obj_secret_int3"] = khulnasoft.Output.secret(obj_secret_int3).apply(khulnasoft.runtime.to_json) if obj_secret_int3 is not None else None
            __props__.__dict__["obj_secret_num1"] = khulnasoft.Output.secret(obj_secret_num1).apply(khulnasoft.runtime.to_json) if obj_secret_num1 is not None else None
            __props__.__dict__["obj_secret_num2"] = khulnasoft.Output.secret(obj_secret_num2).apply(khulnasoft.runtime.to_json) if obj_secret_num2 is not None else None
            __props__.__dict__["obj_secret_num3"] = khulnasoft.Output.secret(obj_secret_num3).apply(khulnasoft.runtime.to_json) if obj_secret_num3 is not None else None
            __props__.__dict__["obj_secret_string1"] = khulnasoft.Output.secret(obj_secret_string1).apply(khulnasoft.runtime.to_json) if obj_secret_string1 is not None else None
            __props__.__dict__["obj_secret_string2"] = khulnasoft.Output.secret(obj_secret_string2).apply(khulnasoft.runtime.to_json) if obj_secret_string2 is not None else None
            __props__.__dict__["obj_secret_string3"] = khulnasoft.Output.secret(obj_secret_string3).apply(khulnasoft.runtime.to_json) if obj_secret_string3 is not None else None
            __props__.__dict__["obj_string1"] = khulnasoft.Output.from_input(obj_string1).apply(khulnasoft.runtime.to_json) if obj_string1 is not None else None
            __props__.__dict__["obj_string2"] = khulnasoft.Output.from_input(obj_string2).apply(khulnasoft.runtime.to_json) if obj_string2 is not None else None
            __props__.__dict__["obj_string3"] = khulnasoft.Output.from_input(obj_string3).apply(khulnasoft.runtime.to_json) if obj_string3 is not None else None
            __props__.__dict__["secret_bool1"] = khulnasoft.Output.secret(secret_bool1).apply(khulnasoft.runtime.to_json) if secret_bool1 is not None else None
            __props__.__dict__["secret_bool2"] = khulnasoft.Output.secret(secret_bool2).apply(khulnasoft.runtime.to_json) if secret_bool2 is not None else None
            __props__.__dict__["secret_bool3"] = khulnasoft.Output.secret(secret_bool3).apply(khulnasoft.runtime.to_json) if secret_bool3 is not None else None
            __props__.__dict__["secret_int1"] = khulnasoft.Output.secret(secret_int1).apply(khulnasoft.runtime.to_json) if secret_int1 is not None else None
            __props__.__dict__["secret_int2"] = khulnasoft.Output.secret(secret_int2).apply(khulnasoft.runtime.to_json) if secret_int2 is not None else None
            __props__.__dict__["secret_int3"] = khulnasoft.Output.secret(secret_int3).apply(khulnasoft.runtime.to_json) if secret_int3 is not None else None
            __props__.__dict__["secret_num1"] = khulnasoft.Output.secret(secret_num1).apply(khulnasoft.runtime.to_json) if secret_num1 is not None else None
            __props__.__dict__["secret_num2"] = khulnasoft.Output.secret(secret_num2).apply(khulnasoft.runtime.to_json) if secret_num2 is not None else None
            __props__.__dict__["secret_num3"] = khulnasoft.Output.secret(secret_num3).apply(khulnasoft.runtime.to_json) if secret_num3 is not None else None
            __props__.__dict__["secret_string1"] = None if secret_string1 is None else khulnasoft.Output.secret(secret_string1)
            __props__.__dict__["secret_string2"] = None if secret_string2 is None else khulnasoft.Output.secret(secret_string2)
            __props__.__dict__["secret_string3"] = None if secret_string3 is None else khulnasoft.Output.secret(secret_string3)
            __props__.__dict__["string1"] = string1
            __props__.__dict__["string2"] = string2
            __props__.__dict__["string3"] = string3
        secret_opts = khulnasoft.ResourceOptions(additional_secret_outputs=["secretString1", "secretString2", "secretString3"])
        opts = khulnasoft.ResourceOptions.merge(opts, secret_opts)
        super(Provider, __self__).__init__(
            'config-grpc',
            resource_name,
            __props__,
            opts)

    @property
    @khulnasoft.getter(name="secretString1")
    def secret_string1(self) -> khulnasoft.Output[Optional[str]]:
        return khulnasoft.get(self, "secret_string1")

    @property
    @khulnasoft.getter(name="secretString2")
    def secret_string2(self) -> khulnasoft.Output[Optional[str]]:
        return khulnasoft.get(self, "secret_string2")

    @property
    @khulnasoft.getter(name="secretString3")
    def secret_string3(self) -> khulnasoft.Output[Optional[str]]:
        return khulnasoft.get(self, "secret_string3")

    @property
    @khulnasoft.getter
    def string1(self) -> khulnasoft.Output[Optional[str]]:
        return khulnasoft.get(self, "string1")

    @property
    @khulnasoft.getter
    def string2(self) -> khulnasoft.Output[Optional[str]]:
        return khulnasoft.get(self, "string2")

    @property
    @khulnasoft.getter
    def string3(self) -> khulnasoft.Output[Optional[str]]:
        return khulnasoft.get(self, "string3")

